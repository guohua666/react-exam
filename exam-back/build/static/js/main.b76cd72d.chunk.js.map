{"version":3,"sources":["C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/util/config.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/util/request.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/api/user.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/config/siderBar.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/components/loginOut/index.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Login.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home/exam/Exam.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/api/exam.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/api/classManage.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home/grade/Room.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home/paper/Paper.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home/grade/Grade.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home/exam/AddExam.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/components/user/view.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/components/user/addApi.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/components/user/addUser.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/components/user/updateUser.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/components/user/addIdentity.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/components/user/identityApi.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/components/user/identityView.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home/user/addUser.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/api/setClass.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home/grade/Student.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/components/user/showUserList.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/config/showUser.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home/user/showUser.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home/user/AddHeadImg.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/api/question.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home/test/AddQuestions.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home/test/QuestionsType.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home/test/WatchQuestions.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home/test/detail.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/router/route.config.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/containers/Home/detail/DetailTest.jsx","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/router/maprouter.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/App.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/api/login.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/store/type/index.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/store/login.js","C:/Users/10146/Desktop/react-exam-01g3/exam-back/src/index.js"],"names":["responseText","401","type","message","501","request","axios","create","timeout","interceptors","use","config","token","Cookies","get","method","data","qs","stringify","_objectSpread","params","headers","length","error","window","location","href","response","res","status","err","Promise","reject","identityId","post","apiAuthority","viewAuthority","siderBar","id","icon","name","isShow","children","path","LoginOut","showModal","_this","setState","visible","handleOk","e","props","handle","handleCancel","react_default","a","createElement","modal","title","this","onOk","onCancel","Component","Header","Layout","Sider","Content","SubMenu","Menu","Home","connect","state","login","collapsed","newSiderBar","loginOut","history","push","Cookie","set","_this2","menu","es_menu","Item","key","onClick","layout","className","src","alt","dropdown","overlay","es_button","headImg","localStorage","getItem","style","width","mode","theme","map","item","v","background","padding","margin","minHeight","_this3","sessionStorage","setItem","identityView","then","_ref","forEach","newdata","m","view_authority_text","some","Login","Form","mapPropsToFields","username","createFormField","Login_objectSpread","value","password","handleSubmit","preventDefault","form","validateFields","values","dispatch","payload","code","success","msg","getFieldDecorator","es_form","labelCol","span","wrapperCol","onSubmit","label","rules","required","input","offset","htmlType","moment","locale","Option","Select","Exam","testType","testObject","allList","contList","cont","columns","dataIndex","render","text","record","handleDetail","ind","handleChange","handleObject","obj","dataList","result","startDate","format","endtDate","examtype","course","result_cont","slice","url","concat","pathname","catch","_this4","_this$state","es_select","defaultValue","onChange","handleSearch","handleClick","table","dataSource","_getTestList","_this5","_this6","getTestClass","getRoom","getRoomList","getClass","updateGrade","addRoom","room","delRoom","serchStudent","delStudent","App","roomList","index","confirm","rec","room_name","cancel","popconfirm","onConfirm","okText","cancelText","border","height","borderRadius","paddingLeft","placeholder","currentTarget","React","Paper","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","Fragment","name_class","name_lesson","Marking_status","talent","Column","Table","Grade","size","visible2","rooms","subjects","guard","sub","rom","confirmDirty","validateFieldsAndScroll","addGuade","delBan","handleOk2","handleCancel2","console","log","addBanClass","class","courseName","classroomnumber","formItemLayout","xs","sm","okButtonProps","cancelButtonProps","assign","Grade_Option","room_id","subject_name","alter","bind","lastName","divider","initialValue","disabled","RangePicker","DatePicker","addExam","subjectList","startdate","enddate","handleSunject","range","start","end","i","disabledDate","current","endOf","disabledRangeTime","_","disabledHours","splice","disabledMinutes","disabledSeconds","date","dateString","active","Date","createman","action","resetFields","hasFeedback","AddExam_Option","input_number","min","max","disabledTime","showTime","hideDisabledOptions","marginBottom","View","view_Option","view_authority_id","view_id","marginLeft","AddApi","AddUsers","addUser_Option","identity_id","identity","UpdateUser","userName","updateUser_Option","user_id","AddIdentity","IdentityApi","identityApi_Option","api_authority_id","api_authority_text","IdentityView","identityView_Option","AddUser","handleSizeChange","target","es_radio","Group","Button","components_user_addUser","user_updateUser","ghost","addIdentity","components_user_addApi","view","identityApi","user_identityView","student","Student","list","grade","user","handleSelectChange","Student_Option","ShowUserList","_this$props","userData","identityColumns","apiAuthorityColumns","identityApiColumns","viewAuthorityColumns","identityViewColumns","ShowUser","userList","identityList","apiAuthorityList","identityApiList","viewAuthorityList","identityViewList","showUserList","el","showUser_objectSpread","beforeUpload","file","isJpgOrPng","isLt2M","AddHeadImg","upHeadImg","loading","info","img","callback","reader","FileReader","addEventListener","readAsDataURL","getBase64","originFileObj","imageUrl","uploadButton","upload","listType","showUploadList","upImg","api","exam_type","subject_type","topic_type","addquestion","addquestiontype","getquestion","findquestion","newquestion","AddQuestions","iptval","topic","answer","subjecttype","topictype","select_exam","select_subject","select_topic","onCollapse","submit","question","_res$data","_this$state2","breadcrumb","AddQuestions_Content","dist_default","AddQuestions_Option","typename","QuestionsType","ModalText","confirmLoading","Changevalue","val","age","setTimeout","QuestionsType_Content","address","Question","subjectType","topicType","hasMore","handleInfiniteOnLoad","warning","fetchData","results","detailquestion","query","getlist","WatchQuestions_Content","tooltip","fontSize","marginTop","marginRight","WatchQuestions_Option","display","borderBottom","flex","question_name","tag","color","question_type","question_class_type","question_exam_type","Detail","detail_Content","detail_Option","question_body","question_answer","route","component","flexFlow","overflow","paddingBottom","paddingTop","WatchQuestions","AddExam","Room","from","to","MapRouter","router","maprouter","defaultParams","userLogin","login_objectSpread","store_login","namespace","effects","regenerator_default","mark","_ref2","call","put","wrap","_context","prev","next","sent","expires","stop","_ref3","_ref4","_context2","reducers","_reducers","defineProperty","_ref5","store_login_objectSpread","_ref6","app","dva","createHistory","model"],"mappings":"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","file":"static/js/main.b76cd72d.chunk.js","sourcesContent":["/*\r\n * @Author: jiaze \r\n * @Date: 2019-09-03 15:10:45 \r\n * @Last Modified by:   jiaze \r\n * @Last Modified time: 2019-09-03 15:10:45 \r\n */\r\n\r\nexport const responseText = {\r\n    401: {\r\n        type: 'error',\r\n        message: '没有权限'\r\n    },\r\n    501: {\r\n        type: 'error',\r\n        message: '服务器错误!'\r\n    }\r\n};","/*\r\n * @Author: xiaoyu \r\n * @Date: 2019-09-03 15:11:00 \r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-07 12:01:02\r\n */\r\n\r\nimport qs from 'qs';\r\nimport axios from 'axios';\r\nimport { message } from 'antd';\r\nimport Cookies from \"js-cookie\"\r\nimport { responseText } from './config';\r\n\r\nconst getToken = () => (Cookies.get('token') == null ? '' : Cookies.get('token'));\r\nconst request = axios.create({\r\n    timeout: 5000\r\n});\r\n\r\n//拦截请求\r\nrequest.interceptors.request.use(config => {\r\n    const token = getToken();\r\n    config.method === 'post'\r\n        ? (config.data = qs.stringify({ ...config.data }))\r\n        : (config.params = { ...config.params });\r\n    config.headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n    config.headers['authorization'] = token;\r\n    if (!token.length) {\r\n        message.error('你还没有登录，没有权限访问');\r\n        window.location.href = '#/login';\r\n    }\r\n    return config;\r\n});\r\n\r\n//拦截响应\r\nrequest.interceptors.response.use(\r\n    res => {\r\n        if (res.status === 401 || res.status === 500) {\r\n            message[responseText[res.status].type](\r\n                responseText[res.status].message\r\n            );\r\n        }\r\n        return res;\r\n    },\r\n    err => {\r\n        return Promise.reject(err);\r\n    }\r\n);\r\n\r\nexport default request;\r\n","/*\r\n * @Author: jiaze\r\n * @Date: 2019-09-03 11:53:14\r\n * @Last Modified by: xiaoyu\r\n * @Last Modified time: 2019-09-15 19:45:19\r\n */\r\n\r\nimport request from \"@/util/request\";\r\n\r\n/**\r\n * @name 获取用户身份类型\r\n */\r\nexport function identityId() {\r\n\treturn request.post('/user/identityId');\r\n}\r\n/**\r\n * @name 添加用户\r\n * @param {*} params 用户的名称、密码、身份\r\n */\r\nexport function addUser(params) {\r\n\treturn request.post('/user/addUser', params);\r\n}\r\n/**\r\n * @name 更新用户\r\n * @param @param {*} params 用户的id、名称、密码、身份\r\n */\r\nexport function updateUser(params) {\r\n\treturn request.post('/user/updateUser', params);\r\n}\r\n/**\r\n * @name 获取所有用户信息\r\n */\r\nexport function getUserList() {\r\n\treturn request.get('/user/userInfo');\r\n}\r\n/**\r\n * @name 添加api接口权限\r\n */\r\nexport function addApi(params) {\r\n\treturn request.post('/user/addApi', params);\r\n}\r\n/**\r\n * @name 查询用户身份类型\r\n */\r\nexport function userIdentity() {\r\n\treturn request.get('/user/userIdentity');\r\n}\r\n/**\r\n * @name 查询api接口\r\n */\r\nexport function apiAuthority() {\r\n\treturn request.get('/user/apiAuthority');\r\n}\r\n/**\r\n * @name 查询身份和api接口关系\r\n */\r\nexport function identityApiAuthority() {\r\n\treturn request.get('/user/identityApiAuthority');\r\n}\r\n/**\r\n * @name 查询视图接口\r\n */\r\nexport function viewAuthority() {\r\n\treturn request.get('/user/viewAuthority');\r\n}\r\n/**\r\n * @name 查询身份与视图接口关系\r\n */\r\nexport function identityViewAuthority(){\r\n\treturn request.get('/user/identityViewAuthority')\r\n}\r\n/**\r\n * @name 身份返回视图\r\n */\r\nexport function identityView(id){\r\n\treturn request.get('/user/identityView/'+id)\r\n}\r\n","/*\r\n * @Author: jiaze \r\n * @Date: 2019-09-03 10:41:49 \r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-08 13:40:00\r\n */\r\n\r\nconst siderBar = [{\r\n        id: 'sub1',\r\n        icon: 'sliders',\r\n        name: '试题管理',\r\n        isShow:false,\r\n        children: [{\r\n                id: '1',\r\n                path: '/main/addQuestions',\r\n                name: '添加试题',\r\n                isShow:false,\r\n            },\r\n            {\r\n                id: '2',\r\n                path: '/main/questionsType',\r\n                name: '试题分类',\r\n                isShow:false,\r\n            },\r\n            {\r\n                id: '3',\r\n                path: '/main/watchQuestions',\r\n                name: '查看试题',\r\n                isShow:false,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'sub2',\r\n        icon: 'user',\r\n        name: '用户管理',\r\n        isShow:false,\r\n        children: [{\r\n                id: '4',\r\n                path: '/main/addUser',\r\n                name: '添加用户',\r\n                isShow:false,\r\n            },\r\n            {\r\n                id: '5',\r\n                path: '/main/showUser',\r\n                name: '用户展示',\r\n                isShow:false,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'sub3',\r\n        icon: 'schedule',\r\n        name: '考试管理',\r\n        isShow:false,\r\n        children: [{\r\n                id: '6',\r\n                path: '/main/addExam',\r\n                name: '添加考试',\r\n                isShow:false,\r\n            },\r\n            {\r\n                id: '7',\r\n                path: '/main/exam',\r\n                name: '试卷列表',\r\n                isShow:false,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'sub4',\r\n        icon: 'project',\r\n        name: '班级管理',\r\n        isShow:false,\r\n        children: [{\r\n                id: '8',\r\n                path: '/main/grade',\r\n                name: '班级管理',\r\n                isShow:false,\r\n            },\r\n            {\r\n                id: '9',\r\n                path: '/main/room',\r\n                name: '教室管理',\r\n                isShow:false,\r\n            },\r\n            {\r\n                id: '10',\r\n                path: '/main/student',\r\n                name: '学生管理',\r\n                isShow:false,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 'sub5',\r\n        icon: 'project',\r\n        name: '阅卷管理',\r\n        isShow:false,\r\n        children: [{\r\n            id: '11',\r\n            path: '/main/paper',\r\n            name: '待批班级',\r\n            isShow:false,\r\n        }]\r\n    }\r\n];\r\nexport default siderBar;","/*\r\n * 退出登录弹框\r\n * @Author: yixian\r\n * @Date: 2019-09-08 20:22:06\r\n * @Last Modified by: yixian\r\n * @Last Modified time: 2019-09-08 20:43:35\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Modal } from 'antd';\r\n\r\nclass LoginOut extends Component {\r\n\tshowModal = () => {\r\n\t\tthis.setState({\r\n\t\t\tvisible: true\r\n\t\t});\r\n\t};\r\n\r\n\thandleOk = e => {\r\n\t\tthis.props.handle('ok');\r\n\t};\r\n\r\n\thandleCancel = e => {\r\n\t\tthis.props.handle('no');\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\ttitle='退出登录'\r\n\t\t\t\t\tvisible={this.props.visible}\r\n\t\t\t\t\tonOk={this.handleOk}\r\n\t\t\t\t\tonCancel={this.handleCancel}>\r\n\t\t\t\t\t<p>确定要退出当前登录吗 亲 ?</p>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default LoginOut;\r\n","/*\r\n * @Author: jiaze\r\n * @Date: 2019-09-03 14:24:28\r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-10 20:13:28\r\n */\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { connect } from 'dva';\r\nimport Cookie from 'js-cookie';\r\nimport '@/assets/css/home/home.css';\r\nimport { identityView } from '@/api/user';\r\nimport siderBar from '@/config/siderBar';\r\nimport React, { Component } from 'react';\r\nimport LoginOut from '@/components/loginOut';\r\nimport { Layout, Menu, Icon, Dropdown, Button } from 'antd';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\nconst { SubMenu } = Menu;\r\nconst mapState2Props = state => {\r\n\treturn state.login;\r\n};\r\n\r\n@connect(mapState2Props)\r\nclass Home extends Component {\r\n\tstate = {\r\n\t\tcollapsed: false,\r\n\t\tnewSiderBar: [],\r\n\t\tvisible: false\r\n\t};\r\n\trender() {\r\n\t\tconst menu = (\r\n\t\t\t<Menu>\r\n\t\t\t\t<Menu.Item key='1'>个人中心</Menu.Item>\r\n\t\t\t\t<Menu.Item key='2'>我的班级</Menu.Item>\r\n\t\t\t\t<Menu.Item\r\n\t\t\t\t\tkey='3'\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tthis.props.history.push('/main/addHeadImg');\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t设置\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item key='4' onClick={this.loginOut}>\r\n\t\t\t\t\t退出登录\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t</Menu>\r\n\t\t);\r\n\t\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t\t<Header>\r\n\t\t\t\t\t<div className='logo'>\r\n\t\t\t\t\t\t<img src='/public/static/img/logo.jpg' alt='logo' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Dropdown overlay={menu}>\r\n\t\t\t\t\t\t<Button className='user'>\r\n\t\t\t\t\t\t\t{!this.props.headImg ? (\r\n\t\t\t\t\t\t\t\tlocalStorage.getItem('HeadImg')?(<img\r\n\t\t\t\t\t\t\t\t\tsrc={localStorage.getItem('HeadImg')}\r\n\t\t\t\t\t\t\t\t\talt='头像'\r\n\t\t\t\t\t\t\t\t/>):\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<img src='/public/static/img/timg.jpg' alt='头像' />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<img src={this.props.headImg} alt='头像' />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<b>{this.props.name}</b>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Dropdown>\r\n\t\t\t\t</Header>\r\n\t\t\t\t<Layout>\r\n\t\t\t\t\t<Sider>\r\n\t\t\t\t\t\t<Menu style={{ width: 256 }} mode='inline' theme='dark'>\r\n\t\t\t\t\t\t\t{this.state.newSiderBar.map(item => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\titem.isShow && (\r\n\t\t\t\t\t\t\t\t\t\t<SubMenu\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon type={item.icon} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{item.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.children &&\r\n\t\t\t\t\t\t\t\t\t\t\t\titem.children.map(v => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tv.isShow && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={v.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.history.push(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tv.path\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{v.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</SubMenu>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t</Sider>\r\n\t\t\t\t\t<Content\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackground: '#F0F2F5',\r\n\t\t\t\t\t\t\tpadding: 24,\r\n\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\tminHeight: 280\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{this.props.children}\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t\t<LoginOut visible={this.state.visible} handle={this.handle} />\r\n\t\t\t</Layout>\r\n\t\t);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t\tsessionStorage.setItem('name',this.props.name)\r\n\t\tlet id = Cookie.get('identity_id');\r\n\t\tif (id * 1 === 2) {\r\n\t\t\tthis.props.history.push('/main/watchQuestions');\r\n\t\t} else if (id * 1 === 0) {\r\n\t\t\tthis.props.history.push('/main/addUser');\r\n\t\t}\r\n\t\tidentityView(id).then(({ data }) => {\r\n\t\t\tsiderBar.forEach(item => {\r\n\t\t\t\titem.isShow = false;\r\n\t\t\t\titem.children.forEach(v => {\r\n\t\t\t\t\tv.isShow = false;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tlet newdata = [];\r\n\t\t\tif (id * 1 === 666) {\r\n\t\t\t\tsiderBar.forEach(item => {\r\n\t\t\t\t\titem.isShow = true;\r\n\t\t\t\t\titem.children.forEach(v => {\r\n\t\t\t\t\t\tv.isShow = true;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tsiderBar.forEach(item => {\r\n\t\t\t\t\titem.children.forEach(v => {\r\n\t\t\t\t\t\tdata.forEach(m => {\r\n\t\t\t\t\t\t\tif (v.name === m.view_authority_text) {\r\n\t\t\t\t\t\t\t\tv.isShow = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tsiderBar.forEach(item => {\r\n\t\t\t\t\titem.isShow = item.children.some(v => {\r\n\t\t\t\t\t\treturn v.isShow;\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tnewdata = siderBar;\r\n\t\t\tthis.setState({\r\n\t\t\t\tnewSiderBar: newdata\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tloginOut = () => {\r\n\t\tthis.setState({\r\n\t\t\tvisible: true\r\n\t\t});\r\n\t};\r\n\thandle = type => {\r\n\t\tif (type === 'ok') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\t\t\tthis.props.history.push('/login');\r\n\t\t\tCookie.set('id', '');\r\n\t\t\tCookie.set('identity_id', '');\r\n\t\t\tCookie.set('token', '');\r\n\t\t} else if (type === 'no') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport default Home;\r\n","/*\r\n * @Author: jiaze \r\n * @Date: 2019-09-03 15:06:19 \r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-10 20:07:52\r\n */\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport { connect } from \"dva\";\r\nimport React, { Component } from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\n\r\nconst mapState2Props = state => {\r\n  return state.login;\r\n};\r\n\r\n@connect(mapState2Props)\r\n@Form.create({\r\n  name: \"loginFrom\",\r\n  mapPropsToFields(props) {\r\n    return {\r\n      username: Form.createFormField({\r\n        ...props.username,\r\n        value: \"\"\r\n      }),\r\n      password: Form.createFormField({\r\n        ...props.password,\r\n        value: \"\"\r\n      })\r\n    };\r\n  }\r\n})\r\n\r\nclass Login extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.dispatch({\r\n          type: \"login/login\",\r\n          payload: values\r\n        }).then(() => {\r\n          if (this.props.value.data.code) {\r\n            message.success(this.props.value.data.msg)\r\n            this.props.history.push(\"/main/addQuestions\")\r\n          } else {\r\n            message.error(this.props.value.data.msg)\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"loginform\">\r\n          <h1>用户登录</h1>\r\n          <Form\r\n            labelCol={{ span: 5 }}\r\n            wrapperCol={{ span: 15 }}\r\n            onSubmit={this.handleSubmit}\r\n            className=\"login-form\"\r\n          >\r\n            <Form.Item label=\"用户名\">\r\n              {getFieldDecorator(\"username\", {\r\n                rules: [\r\n                  { required: true, message: \"请输入您的用户名!\" }\r\n                ]\r\n              })(<Input />)}\r\n            </Form.Item>\r\n            <Form.Item label=\"密码\">\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [\r\n                  { required: true, message: \"请输入您的密码!\" }\r\n                ]\r\n              })(<Input type=\"password\" />)}\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ span: 12, offset: 2 }}>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"sub\">\r\n                登录\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","/*\r\n * @Author: xiaoyu \r\n * @Date: 2019-09-03 15:56:20 \r\n * @Last Modified by: xiaoyu\r\n * @Last Modified time: 2019-09-15 19:26:22\r\n */\r\n\r\nimport 'antd/dist/antd.css';\r\nimport '@/assets/css/exam/exam.css';\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-cn';\r\nimport React, { Component } from 'react';\r\nimport { Select, Button, Table, message } from 'antd';\r\nimport { getTestList, getTestClass, getTestType, getDetailTest } from '@/api/exam';\r\n\r\nmoment.locale('zh-cn');\r\nconst { Option } = Select;\r\n\r\n\r\nclass Exam extends Component {\r\n    state = {\r\n        testType: '',\r\n        testObject: '',\r\n        data: [],\r\n        allList: [],\r\n        contList: [\r\n            {\r\n                id: 0,\r\n                cont: '全部'\r\n            },\r\n            {\r\n                id: 1,\r\n                cont: '进行中'\r\n            },\r\n            {\r\n                id: 2,\r\n                cont: '已结束'\r\n            }\r\n        ],\r\n        columns: [\r\n            {\r\n                title: '试卷信息',\r\n                dataIndex: 'info',\r\n                key: 'info',\r\n            },\r\n            {\r\n                title: '班级',\r\n                dataIndex: 'classtest',\r\n                key: 'classtest',\r\n            },\r\n            {\r\n                title: '创建人',\r\n                dataIndex: 'createman',\r\n                key: 'createman',\r\n            },\r\n            {\r\n                title: '开始时间',\r\n                dataIndex: 'startDate',\r\n                key: 'startDate',\r\n            },\r\n            {\r\n                title: '结束时间',\r\n                dataIndex: 'endtDate',\r\n                key: 'endtDate',\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'action',\r\n                render: (text, record) => {\r\n                    return <span>\r\n                        <b onClick={() => this.handleDetail(record)}>详情</b>\r\n                    </span>\r\n                }\r\n            }\r\n        ],\r\n        ind: 0\r\n    };\r\n    handleChange = (value) => {\r\n        this.setState({\r\n            testType: value\r\n        })\r\n    }\r\n    handleObject = (value) => {\r\n        this.setState({\r\n            testObject: value\r\n        })\r\n    }\r\n    handleSearch() {\r\n        getTestType({\r\n            testType: this.state.testType,\r\n            testObject: this.state.testObject\r\n        }).then(res => {\r\n            const dataList = res.data.result.map(item => {\r\n                item.startDate = moment(+item.startDate).format(\"YYYY-MM-DD HH:mm:ss\");\r\n                item.endtDate = moment(+item.endtDate).format(\"YYYY-MM-DD HH:mm:ss\");\r\n                return item;\r\n            })\r\n            this.setState({\r\n                data: dataList\r\n            })\r\n        })\r\n    }\r\n    handleDetail(record) {\r\n        getDetailTest({\r\n            examtype: record.examtype,\r\n            course: record.course\r\n        }).then(res => {\r\n            if (res.data.code) {\r\n                const result_cont = res.data.result.slice(0, record.cont);\r\n                const url = `/main/detail/${record.key}`;\r\n                this.props.history.push({ pathname: url, state: { data: result_cont } })\r\n                message.success(`${res.data.msg}`);\r\n            } else {\r\n                message.success(`${res.data.msg}`);\r\n            }\r\n        }).catch(error => {\r\n            message.success(error);\r\n        })\r\n    }\r\n    render() {\r\n        const { testType, testObject, data, columns, contList, ind } = this.state;\r\n        return (\r\n            <div className=\"Exam\">\r\n                <h2 className=\"top\">试卷列表</h2>\r\n                <div className=\"center\">\r\n                    <span className=\"spans\">考试类型：</span>\r\n                    <Select defaultValue=\"周考一\" style={{ width: 120 }} value={testType} onChange={this.handleChange}>\r\n                        <Option value=\"周考一\">周考一</Option>\r\n                        <Option value=\"周考二\">周考二</Option>\r\n                        <Option value=\"周考三\">周考三</Option>\r\n                        <Option value=\"月考\">月考</Option>\r\n                    </Select>\r\n                    <span className=\"spans\">课程：</span>\r\n                    <Select defaultValue=\"javaScript上\" style={{ width: 120 }} value={testObject} onChange={this.handleObject}>\r\n                        <Option value=\"javaScript上\">javaScript上</Option>\r\n                        <Option value=\"javaScript下\">javaScript下</Option>\r\n                        <Option value=\"模块化开发\">模块化开发</Option>\r\n                        <Option value=\"移动端开发\">移动端开发</Option>\r\n                        <Option value=\"node基础\">node基础</Option>\r\n                        <Option value=\"组件化开发(vue)\">组件化开发(vue)</Option>\r\n                        <Option value=\"渐进式开发(react)\">渐进式开发(react)</Option>\r\n                        <Option value=\"项目实战\">项目实战</Option>\r\n                        <Option value=\"javaScript高级\">javaScript高级</Option>\r\n                        <Option value=\"node高级\">node高级</Option>\r\n                    </Select>\r\n                    <Button type=\"primary\" icon=\"search\" onClick={() => this.handleSearch()} className=\"exam-search\">\r\n                        搜索\r\n              </Button>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <p className=\"bottom-top\">\r\n                        <span>试卷列表</span>\r\n                        {\r\n                            contList.map(item => (\r\n                                <b key={item.id} className={item.id === ind ? 'active' : ''} onClick={() => this.handleClick(item.id, item)}>{item.cont}</b>\r\n                            ))\r\n                        }\r\n                    </p>\r\n                    <div className=\"bottom-bottom\">\r\n                        <Table columns={columns} dataSource={data} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        this._getTestList();\r\n\r\n    }\r\n\r\n    _getTestList() {\r\n        getTestList().then(res => {\r\n            const dataList = res.data.result.map(item => {\r\n                item.startDate = moment(+item.startDate).format(\"YYYY-MM-DD HH:mm:ss\");\r\n                item.endtDate = moment(+item.endtDate).format(\"YYYY-MM-DD HH:mm:ss\");\r\n                return item;\r\n            })\r\n            this.setState({\r\n                data: dataList,\r\n                allList: dataList\r\n            })\r\n        })\r\n    }\r\n\r\n    handleClick(id, obj) {\r\n\r\n        this.setState({\r\n            ind: id\r\n        })\r\n        getTestClass(id).then(res => {\r\n            const dataList = res.data.result.map(item => {\r\n                item.startDate = moment(+item.startDate).format(\"YYYY-MM-DD HH:mm:ss\");\r\n                item.endtDate = moment(+item.endtDate).format(\"YYYY-MM-DD HH:mm:ss\");\r\n                return item;\r\n            })\r\n            this.setState({\r\n                data: dataList\r\n            })\r\n            if (this.state.ind === 0) {\r\n                this.setState({\r\n                    data: this.state.allList\r\n                })\r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Exam;\r\n","/*\r\n * @Author: xiaoyu \r\n * @Date: 2019-09-03 16:37:18 \r\n * @Last Modified by: xiaoyu\r\n * @Last Modified time: 2019-09-15 19:20:07\r\n */\r\nimport request from \"@/util/request\";\r\n\r\n/**\r\n * @name 获取试卷列表\r\n */\r\nexport function getTestList() {\r\n    const url = '/exam/exam';\r\n    return request.get(url)\r\n}\r\n\r\n/**\r\n * @name 获取试卷分类\r\n */\r\nexport function getTestClass(id) {\r\n    const url = `/exam/type?id=${id}`;\r\n    return request.get(url)\r\n}\r\n\r\n/**\r\n * @name 搜索考试类型\r\n */\r\nexport function getTestType(obj) {\r\n    const url = '/exam/search';\r\n    return request.post(url, obj)\r\n}\r\n/**\r\n * @name 添加考试\r\n */\r\nexport function addTest(obj) {\r\n    const url = '/exam/addtest';\r\n    return request.post(url, obj)\r\n}\r\n/**\r\n * @name 获取课程列表\r\n */\r\nexport function getSubject() {\r\n    const url = '/exam/subject';\r\n    return request.get(url)\r\n}\r\n/**\r\n * @name 获取详情试题数据\r\n */\r\nexport function getDetailTest(obj) {\r\n    const url = '/exam/detailtest';\r\n    return request.post(url, obj)\r\n}\r\n","\r\nimport request from \"@/util/request\";\r\nexport const getRoom = () => {\r\n    return request.get('/grade/getRoom');\r\n};\r\nexport const getRoomList = () => {\r\n    return request.get('/grade/getRoomList');\r\n};\r\nexport const getSubject = () => {\r\n    return request.get('/grade/getSubject');\r\n};\r\nexport const getClass = () => {\r\n    return request.get('/grade/getClass');\r\n};\r\nexport const addBanClass = (params) => {\r\n    return request.post('/grade/addBanClass',params);\r\n};\r\nexport const delGrade = (id) => {\r\n    return request.post('/grade/delGrade',{id});\r\n};\r\nexport const updateGrade = (params) => {\r\n    return request.post('/grade/updateGrade',params);\r\n};\r\nexport const addRoom = (room) => {\r\n    return request.post('/grade/addRoom',{room});\r\n};\r\nexport const delRoom = (room) => {\r\n    return request.post('/grade/delRoom',{room});\r\n};\r\nexport const serchStudent = (params) => {\r\n    return request.post('/grade/serchStudent',params);\r\n};\r\nexport const delStudent = (params) => {\r\n    return request.post('/grade/delStudent',params);\r\n};","/*\r\n * @Author: xub \r\n * @Date: 2019-09-08 23:33:09 \r\n * @Last Modified by: mikey.zhaopeng\r\n * @Last Modified time: 2019-09-12 09:15:20\r\n */\r\nimport \"@/assets/css/grade/room.css\";\r\nimport React from 'react';\r\nimport { addRoom, getRoomList, delRoom } from '@/api/classManage';\r\nimport { Modal, Button, Table, Popconfirm, message } from 'antd';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    visible: false,\r\n    value: \"\",\r\n    roomList: []\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    let room = this.state.value;\r\n    addRoom(room).then(res => {\r\n      message.success('添加成功')\r\n      getRoomList().then(res => {\r\n        this.setState({\r\n          roomList: res.data.result.map((item, index) => {\r\n            item.key = index\r\n            return item\r\n          })\r\n        })\r\n      })\r\n    }\r\n    )\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n  confirm = (rec) => {\r\n    delRoom(rec.room_name).then(res => {\r\n      getRoomList().then(res => {\r\n        this.setState({\r\n          roomList: res.data.result.map((item, index) => {\r\n            item.key = index\r\n            return item\r\n          })\r\n        })\r\n      })\r\n    })\r\n    message.success('删除成功');\r\n  }\r\n\r\n  cancel = (e) => {\r\n    message.error('取消删除');\r\n  }\r\n  componentDidMount() {\r\n    getRoomList().then(res => {\r\n      this.setState({\r\n        roomList: res.data.result.map((item, index) => {\r\n          item.key = index\r\n          return item\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: '教室号',\r\n        dataIndex: 'room_name',\r\n        key: 'room_id',\r\n      },\r\n      {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: (record) => (\r\n          <span>\r\n            < Popconfirm\r\n              title=\"确定删除吗?\"\r\n              onConfirm={() => this.confirm(record)}\r\n              onCancel={this.cancel}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <span className=\"cus\" onClick={() => {\r\n                \r\n              }}>删除</span>\r\n            </Popconfirm>\r\n          </span >\r\n        ),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"roomManage\">\r\n        <Button type=\"primary\" onClick={this.showModal} className=\"btn1\">\r\n          添加教室\r\n        </Button>\r\n        <Modal\r\n          title=\"添加教室\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <p>教室号：<input\r\n            style={{ border: \"solid 1px #ccc\", height: \"30px\", borderRadius: '3px', paddingLeft: \"10px\" }}\r\n            type=\"text\" placeholder=\"请输入教室号\" value={this.state.value} onChange={(e) => {\r\n              this.setState({\r\n                value: e.currentTarget.value\r\n              })\r\n            }} /></p>\r\n        </Modal>\r\n        <Table columns={columns} dataSource={this.state.roomList} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","/*\r\n * @Author: jiaze \r\n * @Date: 2019-09-03 15:00:01 \r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-09 08:00:34\r\n */\r\n\r\n\r\nimport { Table } from 'antd';\r\nimport \"@/assets/css/paper/paper.css\";\r\nimport React, { Component } from 'react';\r\n\r\nexport class Paper extends Component {\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: '班级名',\r\n        dataIndex: 'name_class',\r\n        key: 'name_class',\r\n      },\r\n      {\r\n        title: '课程名称',\r\n        dataIndex: 'name_lesson',\r\n        key: 'name_lesson',\r\n      },\r\n      {\r\n        title: '阅卷状态',\r\n        dataIndex: 'Marking_status',\r\n        key: 'Marking_status',\r\n      },\r\n      {\r\n        title: '成才率',\r\n        dataIndex: 'talent',\r\n        key: 'talent',\r\n      }, {\r\n        title: '操作',\r\n        key: 'action',\r\n        render: (text, record) => (\r\n          <a href=\"/#/main/paper\">\r\n            批卷\r\n          </a>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    const data = [\r\n      {\r\n        key: '1',\r\n        name_class: '1610C',\r\n        name_lesson: \"渐进式开发(react)\",\r\n        Marking_status: \"\",\r\n        talent: '80%',\r\n      }, {\r\n        key: '2',\r\n        name_class: '1610C',\r\n        name_lesson: \"渐进式开发(react)\",\r\n        Marking_status: \"\",\r\n        talent: '80%',\r\n      }, {\r\n        key: '3',\r\n        name_class: '1610C',\r\n        name_lesson: \"渐进式开发(react)\",\r\n        Marking_status: \"\",\r\n        talent: '80%',\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <h2 className=\"title\">待批班级</h2>\r\n        <div className=\"table\">\r\n          <Table columns={columns} dataSource={data} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Paper;\r\n","/*\r\n * @Author: xub \r\n * @Date: 2019-09-07 07:24:55 \r\n * @Last Modified by: mikey.zhaopeng\r\n * @Last Modified time: 2019-09-12 09:15:23\r\n */\r\n\r\nimport \"@/assets/css/grade/grade.css\";\r\nimport React, { Component } from 'react'\r\nimport { Form, Input, Select, Table, Divider, Button, Modal, Popconfirm, message } from 'antd';\r\nimport { getRoom, getSubject, getClass, addBanClass, delGrade, updateGrade } from '@/api/classManage';\r\n\r\nconst { Option } = Select;\r\nconst { Column } = Table;\r\n\r\n@Form.create({ name: 'class' })\r\nclass Grade extends Component {\r\n    state = {\r\n        size: 'large',\r\n        visible: false,\r\n        visible2: false,\r\n        rooms: [],\r\n        subjects: [],\r\n        data: [],\r\n        guard: '',\r\n        sub: '',\r\n        rom: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        getClass().then(res => {\r\n            this.setState({\r\n                data: res.data.result.map((item, index) => {\r\n                    item.key = index\r\n                    return item\r\n                })\r\n            })\r\n        })\r\n        //room列表\r\n        getRoom().then(res => {\r\n            this.setState({\r\n                rooms: res.data.result\r\n            });\r\n        });\r\n        //课程列表\r\n        getSubject().then(res => {\r\n            this.setState({\r\n                subjects: res.data.result\r\n            });\r\n        });\r\n    }\r\n\r\n    //添加班级\r\n    addGuade(params) {\r\n        console.log(params)\r\n        addBanClass(params).then(res => {\r\n            if (res.data.result === \"no\") {\r\n                message.error(\"班级已存在，请勿重复添加\")\r\n            } else {\r\n                getClass().then(res => {\r\n                    this.setState({\r\n                        data: res.data.result.map((item, index) => {\r\n                            item.key = index\r\n                            return item\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    showModal = () => {\r\n        getRoom().then(res => {\r\n            this.setState({\r\n                rooms: res.data.result,\r\n                visible: true,\r\n                confirmDirty: false\r\n            });\r\n        });\r\n    };\r\n \r\n    handleOk = e => {\r\n        getRoom().then(res => {\r\n            this.setState({\r\n                rooms: res.data.result\r\n            });\r\n        });\r\n        this.setState({\r\n            visible: false\r\n        });\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                this.addGuade(values);\r\n            }\r\n        });\r\n    };\r\n\r\n    handleCancel = e => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    confirm = (rec) => {\r\n        this.delBan(rec)\r\n        message.success('删除成功');\r\n    }\r\n\r\n    cancel = (e) => {\r\n        message.error('取消删除');\r\n    }\r\n    //删除\r\n    delBan(record) {\r\n        delGrade(record.id).then(res => {\r\n            getClass().then(res => {\r\n                this.setState({\r\n                    data: res.data.result.map((item, index) => {\r\n                        item.key = index\r\n                        return item\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    //修改\r\n    alter(record) {\r\n        this.setState({\r\n            visible2: true,\r\n            guard: record.class,\r\n            sub: record.courseName,\r\n            rom: record.classroomnumber,\r\n            \r\n        });\r\n    }\r\n    handleOk2 = e => {\r\n        this.setState({\r\n            visible2: false,\r\n        });\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                updateGrade(values).then(res => {\r\n                    getClass().then(res => {\r\n                        this.setState({\r\n                            data: res.data.result.map((item, index) => {\r\n                                item.key = index\r\n                                return item\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    handleCancel2 = e => {\r\n        this.setState({\r\n            visible2: false,\r\n        });\r\n    };\r\n    render() {\r\n        const { size, data } = this.state;\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 8 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n        return (\r\n            <div className=\"cls\">\r\n                <div className=\"btn\">\r\n                    <Button type=\"primary\" size={size} onClick={this.showModal} className=\"btn1\">添加班级</Button>\r\n                    <Modal\r\n                        title=\"添加班级\"\r\n                        visible={this.state.visible}\r\n                        onOk={this.handleOk}\r\n                        onCancel={this.handleCancel}\r\n                        okButtonProps cancelButtonProps\r\n                        okText=\"提交\" cancelText=\"取消\" >\r\n                        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                            <Form.Item labelCol={{ span: 5}} label=\"班级名\" >\r\n                                {getFieldDecorator('ban', {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请选择班级号!',\r\n                                        },\r\n                                    ],\r\n                                })(<Input placeholder=\"请选择班级号\" />)}\r\n                            </Form.Item>\r\n                            <Form.Item labelCol={{ span: 5}} label=\"教室号\" >\r\n                                {getFieldDecorator('room', {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请选择教室号!',\r\n                                        },\r\n                                    ],\r\n                                })(\r\n                                    <Select placeholder=\"请选择教室号\" >\r\n                                        {\r\n                                            this.state.rooms.map((item, index) => {\r\n                                                return <Option value={item.room_name} key={item.room_id}>{item.room_name}</Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item labelCol={{ span: 5}} label=\"课程名\" >\r\n                                {getFieldDecorator('subject', {\r\n                                    rules: [\r\n                                        {\r\n                                            required: true,\r\n                                            message: '请选择课程名!',\r\n                                        },\r\n                                    ],\r\n                                })(\r\n                                    <Select placeholder=\"请选择课程名\">\r\n                                        {\r\n                                            this.state.subjects.map((item, index) => {\r\n                                                return <Option value={item.subject_name} key={item.id}>{item.subject_name}</Option>\r\n                                            })\r\n                                        }\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Modal>\r\n                </div>\r\n                <Table dataSource={data}>\r\n                    <Column title=\"班级名\" dataIndex=\"class\" key=\"class\" />\r\n                    <Column title=\"课程名\" dataIndex=\"courseName\" key=\"courseName\" />\r\n                    <Column title=\"教室号\" dataIndex=\"classroomnumber\" key=\"classroomnumber\" />\r\n                    <Column\r\n                        title=\"操作\"\r\n                        render={(record) => (\r\n                            <span>\r\n                                <span className=\"cus\" onClick={this.alter.bind(this, record)}>修改 {record.lastName}</span>\r\n                                <Divider type=\"vertical\" />\r\n                                <Popconfirm\r\n                                    title=\"确定删除吗?\"\r\n                                    onConfirm={() => this.confirm(record)}\r\n                                    onCancel={this.cancel}\r\n                                    okText=\"Yes\"\r\n                                    cancelText=\"No\"\r\n                                >\r\n                                    <span className=\"cus\" >删除</span>\r\n                                </Popconfirm>\r\n                            </span>\r\n                        )}\r\n                    />\r\n                </Table>\r\n                <Modal\r\n                    title=\"修改班级\"\r\n                    visible={this.state.visible2}\r\n                    onOk={this.handleOk2}\r\n                    onCancel={this.handleCancel2}\r\n                    okButtonProps cancelButtonProps\r\n                    okText=\"提交\" cancelText=\"取消\" >\r\n                    <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                        <Form.Item labelCol={{ span: 5}} label=\"班级名\">\r\n                            {getFieldDecorator('ban', { initialValue: `${this.state.guard}` }, {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '请选择班级号!',\r\n                                    },\r\n                                ],\r\n                            })(<Input placeholder=\"请选择班级号\" disabled />)}\r\n                        </Form.Item>\r\n                        <Form.Item labelCol={{ span: 5}} label=\"教室号\" >\r\n                            {getFieldDecorator('room', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '请选择教室号!',\r\n                                    },\r\n                                ],\r\n                            })(\r\n                                <Select placeholder=\"请选择教室号\" >\r\n                                    {\r\n                                        this.state.rooms.map((item, index) => {\r\n                                            return <Option value={item.room_name} key={item.room_id}>{item.room_name}</Option>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item labelCol={{ span: 5}} label=\"课程名\" >\r\n                            {getFieldDecorator('subject', {\r\n                                rules: [\r\n                                    {\r\n                                        required: true,\r\n                                        message: '请选择课程名!',\r\n                                    },\r\n                                ],\r\n                            })(\r\n                                <Select placeholder=\"请选择课程名\">\r\n                                    {\r\n                                        this.state.subjects.map((item, index) => {\r\n                                            return <Option value={item.subject_name} key={item.id}>{item.subject_name}</Option>\r\n                                        })\r\n                                    }\r\n                                </Select>,\r\n                            )}\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Grade;\r\n","/*\r\n * @Author: heinan\r\n * @Date: 2019-09-03 09:59:36\r\n * @Last Modified by: xiaoyu\r\n * @Last Modified time: 2019-09-15 19:29:00\r\n */\r\n\r\nimport 'antd/dist/antd.css';\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-cn';\r\nimport Cookies from 'js-cookie';\r\nimport React, { Component } from 'react';\r\nimport { addTest, getSubject } from '@/api/exam';\r\nimport { Form, Input, Button, Select, InputNumber, DatePicker, message } from 'antd';\r\n\r\nmoment.locale('zh-cn');\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n@Form.create({ name: 'normal_login' })\r\n\r\nclass addExam extends Component {\r\n  state = {\r\n    subjectList: [],\r\n    startdate: null,\r\n    enddate: null\r\n  };\r\n\r\n  handleSunject = () => {\r\n    getSubject().then(res => {\r\n      this.setState({\r\n        subjectList: res.data.result\r\n      })\r\n    })\r\n  };\r\n  range = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  }\r\n  disabledDate = (current) => {\r\n    return current && current < moment().endOf('day');\r\n  };\r\n  disabledRangeTime = (_, type) => {\r\n    if (type === 'start') {\r\n      return {\r\n        disabledHours: () => this.range(0, 60).splice(4, 20),\r\n        disabledMinutes: () => this.range(30, 60),\r\n        disabledSeconds: () => [55, 56],\r\n      };\r\n    }\r\n    return {\r\n      disabledHours: () => this.range(0, 60).splice(20, 4),\r\n      disabledMinutes: () => this.range(0, 31),\r\n      disabledSeconds: () => [55, 56],\r\n    };\r\n  };\r\n  handleChange = (date, dateString) => {\r\n    this.setState({\r\n      startdate: dateString[0],\r\n      enddate: dateString[1]\r\n    })\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const username = Cookies.get('username');\r\n        const nowDate = +new Date();\r\n        const active = nowDate > +new Date(this.state.enddate) ? '2' : '1';\r\n        values.startdate = +new Date(this.state.startdate);\r\n        values.enddate = +new Date(this.state.enddate);\r\n        values.createman = username;\r\n        values.action = '详情';\r\n        values.type = active;\r\n        addTest(values).then(({ data }) => {\r\n          if (data.code) {\r\n            message.success(\"添加成功\");\r\n            this.props.form.resetFields();\r\n          } else {\r\n            message.success(`${data.msg}`);\r\n          }\r\n        })\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleSunject();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { subjectList } = this.state;\r\n    return (\r\n      <div className=\"addExam\">\r\n        <h2 className=\"top\">添加考试</h2>\r\n        <div className=\"bottom\" style={{ paddingLeft: 30 }}>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Form.Item label=\"试卷名称\">\r\n              {getFieldDecorator('info', {\r\n                rules: [{ required: true, message: '请输入考试名称!' }],\r\n              })(\r\n                <Input />,\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"选择考试类型:\" hasFeedback>\r\n              {getFieldDecorator('examtype', {\r\n                rules: [{ required: true, message: '请选择考试类型!' }],\r\n              })(\r\n                <Select className=\"select\">\r\n                  <Option value=\"周考一\">周考一</Option>\r\n                  <Option value=\"周考二\">周考二</Option>\r\n                  <Option value=\"周考三\">周考三</Option>\r\n                  <Option value=\"月考\">月考</Option>\r\n                </Select>,\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"选择课程:\" hasFeedback>\r\n              {getFieldDecorator('course', {\r\n                rules: [{ required: true, message: '请选择课程!' }],\r\n              })(\r\n                <Select className=\"select\">\r\n                  {\r\n                    subjectList.map(item => (\r\n                      <Option value={item.subject_name} key={item.id}>{item.subject_name}</Option>\r\n                    ))\r\n                  }\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item label=\"设置题量:\" hasFeedback>\r\n              {getFieldDecorator('cont', {\r\n                rules: [{ required: true, message: '请设置题量!' }],\r\n              })(<InputNumber min={3} max={9} />)}\r\n            </Form.Item>\r\n            <Form.Item label=\"考试时间:\" className=\"date\" >\r\n              {getFieldDecorator('dateTime', {\r\n                rules: [{ required: true, message: '请设置题量!' }],\r\n              })(<RangePicker\r\n                disabledDate={this.disabledDate}\r\n                disabledTime={this.disabledRangeTime}\r\n                onChange={this.handleChange}\r\n                showTime={{\r\n                  hideDisabledOptions: true,\r\n                  defaultValue: [moment('00:00:00', 'HH:mm:ss'), moment('11:59:59', 'HH:mm:ss')],\r\n                }}\r\n                format=\"YYYY-MM-DD HH:mm:ss\"\r\n              />)}\r\n\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ marginBottom: '30px' }}>\r\n              创建试卷\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default addExam;\r\n","/*\r\n * 添加视图接口权限\r\n * @Author: yixian\r\n * @Date: 2019-09-03 11:51:05\r\n * @Last Modified by: yixian\r\n * @Last Modified time: 2019-09-07 11:53:34\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n@Form.create()\r\nclass View extends Component {\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tconsole.log('Received values of form: ', values);\r\n\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\tconst { getFieldDecorator } = this.props.form;\r\n\t\treturn (\r\n\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('view', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: '请选择已有视图!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(\r\n\t\t\t\t\t\t<Select placeholder='请选择已有视图'>\r\n\t\t\t\t\t\t\t{this.props.viewAuthority\r\n\t\t\t\t\t\t\t\t? this.props.viewAuthority.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.view_authority_id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={item.view_id}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.view_authority_text}\r\n\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\t\t确定\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{ marginLeft: 8 }}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t重置\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n}\r\nexport default View;\r\n","/*\r\n * 添加api接口权限\r\n * @Author: yixian\r\n * @Date: 2019-09-03 11:48:31\r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-07 00:35:29\r\n */\r\n\r\nimport { addApi } from '@/api/user';\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, Input, message } from 'antd';\r\n\r\n@Form.create()\r\nclass AddApi extends Component {\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\taddApi(values).then(res => {\r\n\t\t\t\t\tif (res.data.code === 1) {\r\n\t\t\t\t\t\tmessage.success('添加成功');\r\n\t\t\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\tconst { getFieldDecorator } = this.props.form;\r\n\t\treturn (\r\n\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('apiName', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: '请输入api接口权限名称!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input placeholder='请输入api接口权限名称' />)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('apiUrl', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: 'Please input your api接口权限url!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input placeholder='请输入api接口权限url' />)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('apiMethod', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: 'Please input your api接口权限方法!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input placeholder='请输入api接口权限方法' />)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\t\t确定\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{ marginLeft: 8 }}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t重置\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n}\r\nexport default AddApi;\r\n","/*\r\n * 添加用户\r\n * @Author: yixian\r\n * @Date: 2019-09-03 11:49:59\r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-10 09:22:49\r\n */\r\n\r\nimport { addUser } from '@/api/user';\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, Input, Select, message } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n@Form.create()\r\nclass AddUsers extends Component {\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\taddUser(values)\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tif (res.data.code === 1) {\r\n\t\t\t\t\t\t\tmessage.success('添加成功');\r\n\t\t\t\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tmessage.error('此用户已存在');\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\tconst { getFieldDecorator } = this.props.form;\r\n\t\treturn (\r\n\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('addUserName', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: 'Please input your username!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input placeholder='请输入用户名' />)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('addPassWord', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: 'Please input your password!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input placeholder='请输入密码' type=\"password\"/>)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('identityId', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: 'Please select your identityId!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(\r\n\t\t\t\t\t\t<Select placeholder='请选择身份id'>\r\n\t\t\t\t\t\t\t{this.props.identityId\r\n\t\t\t\t\t\t\t\t? this.props.identityId.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={item.identity_id}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.identity}\r\n\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\t\t确定\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{ marginLeft: 8 }}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t重置\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n}\r\nexport default AddUsers;\r\n","/*\r\n * @Author: yixian\r\n * @Date: 2019-09-06 17:04:57\r\n * @Last Modified by: yixian\r\n * @Last Modified time: 2019-09-06 19:21:10\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, Input, Select, message } from 'antd';\r\nimport { getUserList, updateUser } from '@/api/user';\r\n\r\nconst { Option } = Select;\r\n\r\n@Form.create()\r\nclass UpdateUser extends Component {\r\n\tstate = {\r\n\t\tuserName: []\r\n\t};\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tupdateUser(values).then(res => {\r\n\t\t\t\t\tif (res.data.code === 1) {\r\n\t\t\t\t\t\tmessage.success('更新成功');\r\n\t\t\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\tconst { userName } = this.state;\r\n\t\tconst { getFieldDecorator } = this.props.form;\r\n\t\treturn (\r\n\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('userName', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: '请选择身份id'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(\r\n\t\t\t\t\t\t<Select placeholder='请选择身份id'>\r\n\t\t\t\t\t\t\t{userName\r\n\t\t\t\t\t\t\t\t? userName.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.user_id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={item.user_id}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.username}\r\n\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('addUserName', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: 'Please input your username!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input placeholder='请输入用户名' />)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('addPassWord', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: 'Please input your password!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input placeholder='请输入密码' type='password' />)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('identityId', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: '请选择身份id'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(\r\n\t\t\t\t\t\t<Select placeholder='请选择身份id'>\r\n\t\t\t\t\t\t\t{this.props.identityId\r\n\t\t\t\t\t\t\t\t? this.props.identityId.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={item.identity_id}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.identity}\r\n\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\t\t确定\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{ marginLeft: 8 }}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t重置\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tgetUserList().then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tuserName: res.data\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nexport default UpdateUser;\r\n","/*\r\n * 添加身份\r\n * @Author: yixian\r\n * @Date: 2019-09-03 11:48:47\r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-09 07:54:49\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\n\r\n@Form.create()\r\nclass AddIdentity extends Component {\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tconsole.log('Received values of form: ', values);\r\n\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\tconst { getFieldDecorator } = this.props.form;\r\n\t\treturn (\r\n\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('identityName', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: 'Please input your identityName!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(<Input placeholder='请输入身份名称' />)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\t\t确定\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{ marginLeft: 8 }}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t重置\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n}\r\nexport default AddIdentity;\r\n","/*\r\n * 给身份设置api接口权限\r\n * @Author: yixian\r\n * @Date: 2019-09-03 11:50:29\r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-09 07:54:55\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, Select } from 'antd';\r\nimport { apiAuthority } from '@/api/user';\r\n\r\nconst { Option } = Select;\r\n\r\n@Form.create()\r\nclass IdentityApi extends Component {\r\n\tstate = {\r\n\t\tapiAuthority: []\r\n\t};\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\tconst { getFieldDecorator } = this.props.form;\r\n\t\tconst { apiAuthority } = this.state;\r\n\t\treturn (\r\n\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('identityId', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: '请选择身份id!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(\r\n\t\t\t\t\t\t<Select placeholder='请选择身份id'>\r\n\t\t\t\t\t\t\t{this.props.identityId\r\n\t\t\t\t\t\t\t\t? this.props.identityId.map(item => (\r\n\t\t\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue={item.identity_id}>\r\n\t\t\t\t\t\t\t\t\t\t{item.identity}\r\n\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('apiId', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: '请选择api接口权限id!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(\r\n\t\t\t\t\t\t<Select placeholder='请选择api接口权限id'>\r\n\t\t\t\t\t\t\t{apiAuthority\r\n\t\t\t\t\t\t\t\t? apiAuthority.map(item => (\r\n\t\t\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\t\t\tkey={item.api_authority_id}\r\n\t\t\t\t\t\t\t\t\t\tvalue={item.api_authority_id}>\r\n\t\t\t\t\t\t\t\t\t\t{item.api_authority_text}\r\n\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\t\t确定\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{ marginLeft: 8 }}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t重置\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tapiAuthority().then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tapiAuthority: res.data\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nexport default IdentityApi;\r\n","/*\r\n * 给身份设置视图权限\r\n * @Author: yixian\r\n * @Date: 2019-09-03 11:50:43\r\n * @Last Modified by: yixian\r\n * @Last Modified time: 2019-09-07 11:53:14\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Button, Form, Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n@Form.create()\r\nclass IdentityView extends Component {\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.form.validateFieldsAndScroll((err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tconsole.log('Received values of form: ', values);\r\n\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\tconst { getFieldDecorator } = this.props.form;\r\n\t\tconst { viewAuthority } = this.props;\r\n\t\treturn (\r\n\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('identityId', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: '请选择身份id!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(\r\n\t\t\t\t\t\t<Select placeholder='请选择身份id'>\r\n\t\t\t\t\t\t\t{this.props.identityId\r\n\t\t\t\t\t\t\t\t? this.props.identityId.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={item.identity_id}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.identity}\r\n\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item className='addUserItem'>\r\n\t\t\t\t\t{getFieldDecorator('viewId', {\r\n\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\tmessage: '请选择视图权限id!'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t})(\r\n\t\t\t\t\t\t<Select placeholder='请选择视图权限id'>\r\n\t\t\t\t\t\t\t{viewAuthority\r\n\t\t\t\t\t\t\t\t? viewAuthority.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Option\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.view_authority_id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={item.view_id}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.view_authority_text}\r\n\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type='primary' htmlType='submit'>\r\n\t\t\t\t\t\t确定\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{ marginLeft: 8 }}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.props.form.resetFields();\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t重置\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n}\r\nexport default IdentityView;\r\n","/*\r\n * 添加用户\r\n * @Author: yixian\r\n * @Date: 2019-09-06 16:27:32\r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-09 00:01:28\r\n */\r\n\r\nimport '@/assets/css/user/addUser.css';\r\nimport React, { Component } from 'react';\r\nimport View from '@/components/user/view';\r\nimport { Button, Radio, Form } from 'antd';\r\nimport AddApi from '@/components/user/addApi';\r\nimport AddUsers from '@/components/user/addUser';\r\nimport UpdateUser from '@/components/user/updateUser';\r\nimport { identityId, viewAuthority } from '@/api/user';\r\nimport AddIdentity from '@/components/user/addIdentity';\r\nimport IdentityApi from '@/components/user/identityApi';\r\nimport IdentityView from '@/components/user/identityView';\r\n\r\n@Form.create()\r\nclass AddUser extends Component {\r\n\tstate = {\r\n\t\tsize: '添加用户',\r\n\t\tidentityId: [],\r\n\t\tviewAuthority: []\r\n\t};\r\n\thandleSizeChange = e => {\r\n\t\tthis.setState({ size: e.target.value });\r\n\t};\r\n\trender() {\r\n\t\tconst { size, identityId, viewAuthority } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className='addUser'>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='\r\n\t\t\t\t\t\taddUser_wrapper \r\n\t\t\t\t\t\taddUser_wrapper_left \r\n\t\t\t\t\t\taddUser_wrapper_top \r\n\t\t\t\t\t\taddUser_wrapper_right \r\n\t\t\t\t\t\taddUser_wrapper_bottom\r\n               \t '>\r\n\t\t\t\t\t<div className='addUserItem'>\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tvalue={size}\r\n\t\t\t\t\t\t\tonChange={this.handleSizeChange}>\r\n\t\t\t\t\t\t\t<Radio.Button value='添加用户'>\r\n\t\t\t\t\t\t\t\t添加用户\r\n\t\t\t\t\t\t\t</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value='更新用户'>\r\n\t\t\t\t\t\t\t\t更新用户\r\n\t\t\t\t\t\t\t</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{size === '添加用户' ? (\r\n\t\t\t\t\t\t<AddUsers identityId={identityId} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<UpdateUser identityId={identityId} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='\r\n                                addUser_wrapper\r\n                                addUser_wrapper_top \r\n                                addUser_wrapper_right \r\n                                addUser_wrapper_bottom\r\n                '>\r\n\t\t\t\t\t<div className='addUserItem'>\r\n\t\t\t\t\t\t<Button type='primary' ghost>\r\n\t\t\t\t\t\t\t添加身份\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<AddIdentity />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='\r\n                                addUser_wrapper \r\n                                addUser_wrapper_top \r\n                                addUser_wrapper_right \r\n                                addUser_wrapper_bottom\r\n                '>\r\n\t\t\t\t\t<div className='addUserItem'>\r\n\t\t\t\t\t\t<Button type='primary' ghost>\r\n\t\t\t\t\t\t\t添加api接口权限\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<AddApi />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='\r\n                                addUser_wrapper \r\n                                addUser_wrapper_left \r\n                                addUser_wrapper_right \r\n                                addUser_wrapper_bottom\r\n                '>\r\n\t\t\t\t\t<div className='addUserItem'>\r\n\t\t\t\t\t\t<Button type='primary' ghost>\r\n\t\t\t\t\t\t\t添加视图接口权限\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<View viewAuthority={viewAuthority} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='\r\n                                addUser_wrapper \r\n                                addUser_wrapper_right \r\n                                addUser_wrapper_bottom\r\n                '>\r\n\t\t\t\t\t<div className='addUserItem'>\r\n\t\t\t\t\t\t<Button type='primary' ghost>\r\n\t\t\t\t\t\t\t给身份设置api接口权限\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<IdentityApi identityId={identityId} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='\r\n                                addUser_wrapper \r\n                                addUser_wrapper_right \r\n                                addUser_wrapper_bottom\r\n                '>\r\n\t\t\t\t\t<div className='addUserItem'>\r\n\t\t\t\t\t\t<Button type='primary' ghost>\r\n\t\t\t\t\t\t\t给身份设置试图权限\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<IdentityView\r\n\t\t\t\t\t\tidentityId={identityId}\r\n\t\t\t\t\t\tviewAuthority={viewAuthority}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t//请求\r\n\t\tidentityId().then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tidentityId: res.data\r\n\t\t\t});\r\n\t\t});\r\n\t\tviewAuthority().then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tviewAuthority: res.data\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nexport default AddUser;\r\n","/*\r\n * @Author: zgh \r\n * @Date: 2019-09-03 21:11:05 \r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-07 11:55:35\r\n */\r\n\r\nimport request from \"@/util/request\";\r\n\r\nexport const getClass = () => {\r\n    return request.get('/user/grade');\r\n};\r\nexport const classnumber = () => {\r\n    return request.get('/user/classnumber');\r\n};\r\nexport const student = () => {\r\n    return request.get('/user/student');\r\n};\r\n\r\nexport const removeApi = params => {\r\n    return request.post('/class/remove', { params });\r\n};\r\nexport const addApi = params => {\r\n    return request.post('/class/add', { ...params });\r\n};\r\n","/*\r\n * @Author: xub\r\n * @Date: 2019-09-03 11:19:38\r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-12 09:30:26\r\n */\r\n\r\nimport \"@/assets/css/grade/student.css\";\r\nimport { student } from '@/api/setClass';\r\nimport React, { Component } from \"react\";\r\nimport { Form, Input, Select, Button, Table, message, Popconfirm } from \"antd\";\r\nimport { serchStudent, delStudent, getClass, getRoomList } from '@/api/classManage';\r\n\r\nconst { Option } = Select;\r\n@Form.create({ name: \"horizontal_login\" })\r\nclass Student extends Component {\r\n  state = {\r\n    list: [],\r\n    rooms: [],\r\n    grade: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    getClass().then(res => {\r\n      this.setState({\r\n        grade: res.data.result\r\n      })\r\n    })\r\n    //room列表\r\n    getRoomList().then(res => {\r\n      this.setState({\r\n        rooms: res.data.result\r\n      });\r\n    });\r\n    this.props.form.validateFields();\r\n    student().then(res => {\r\n      this.setState({\r\n        list: res.data.user\r\n      });\r\n    });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      serchStudent(values).then(res => {\r\n        this.setState({\r\n          list: res.data.result\r\n        })\r\n      })\r\n    });\r\n  };\r\n  confirm = (rec) => {\r\n    console.log(rec)\r\n    delStudent(rec).then(res => {\r\n      student().then(res => {\r\n        this.setState({\r\n          list: res.data.user\r\n        });\r\n      });\r\n    })\r\n    message.success('删除成功');\r\n  }\r\n\r\n  cancel = (e) => {\r\n    message.error('取消删除');\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"姓名\",\r\n        dataIndex: \"name\",\r\n        key: \"name\"\r\n      },\r\n      {\r\n        title: \"学号\",\r\n        dataIndex: \"student_number\",\r\n        key: \"student_number\"\r\n      },\r\n      {\r\n        title: \"班级\",\r\n        dataIndex: \"class_number\",\r\n        key: \"class_number\"\r\n      },\r\n      {\r\n        title: \"教室\",\r\n        dataIndex: \"classroom\",\r\n        key: \"classroom\"\r\n      },\r\n      {\r\n        title: \"密码\",\r\n        dataIndex: \"password\",\r\n        key: \"password\"\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        dataIndex: \"operation\",\r\n        key: \"operation\",\r\n        render: (text, record) => (\r\n          <span>\r\n            <Popconfirm\r\n              title=\"确定删除吗?\"\r\n              onConfirm={() => this.confirm(record)}\r\n              onCancel={this.cancel}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <span className=\"cus\" >{text}</span>\r\n            </Popconfirm>\r\n\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div className=\"studentManage\">\r\n        <h3 className=\"h3\">学生管理</h3>\r\n        <div className=\"top\">\r\n          <Form layout=\"inline\" onSubmit={this.handleSubmit} >\r\n            <Form.Item>\r\n              {getFieldDecorator(\"name\", {\r\n              })(<Input placeholder=\"输入学生姓名\" style={{ height: 32 }} />)\r\n              }\r\n            </Form.Item>\r\n            <Form.Item className=\"wid\">\r\n              {getFieldDecorator(\"room\", {\r\n\r\n              })(\r\n                <Select\r\n                  className=\"select1\"\r\n                  placeholder=\"教室号\"\r\n                  onChange={this.handleSelectChange}\r\n                >\r\n                  {\r\n                    this.state.rooms.map((item, index) => {\r\n                      return <Option value={item.room_name} key={item.room_id}>{item.room_name}</Option>\r\n                    })\r\n                  }\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item className=\"wid\">\r\n              {getFieldDecorator(\"banji\", {\r\n\r\n              })(<Select\r\n                className=\"select1\"\r\n                placeholder=\"班级号\"\r\n                onChange={this.handleSelectChange}\r\n              >\r\n                {\r\n                  this.state.grade.map((item, index) => {\r\n                    return <Option value={item.class} key={item.id}>{item.class}</Option>\r\n                  })\r\n                }\r\n              </Select>)\r\n              }\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button htmlType='submit' type=\"primary\">搜索</Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" onClick={() => {\r\n                this.props.form.resetFields();\r\n                student().then(res => {\r\n                  this.setState({\r\n                    list: res.data.user\r\n                  });\r\n                });\r\n              }}>重置</Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        <div className=\"button\">\r\n          <Table columns={columns} dataSource={this.state.list} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Student;\r\n","/*\r\n * @Author: yixian\r\n * @Date: 2019-09-07 00:36:18\r\n * @Last Modified by: yixian\r\n * @Last Modified time: 2019-09-07 10:52:38\r\n */\r\n\r\nimport { Table } from 'antd';\r\nimport React, { Component } from 'react';\r\n\r\nclass ShowUserList extends Component {\r\n\trender() {\r\n\t\tconst { columns, data } = this.props;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Table columns={columns} dataSource={data} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default ShowUserList;\r\n","export const userData = [{\r\n\t\ttitle: '用户名',\r\n\t\tdataIndex: 'username',\r\n\t\tkey: 'username'\r\n\t},\r\n\t{\r\n\t\ttitle: '密码',\r\n\t\tdataIndex: 'password',\r\n\t\tkey: 'password'\r\n\t},\r\n\t{\r\n\t\ttitle: '身份',\r\n\t\tdataIndex: 'identity',\r\n\t\tkey: 'identity'\r\n\t}\r\n];\r\nexport const identityColumns = [{\r\n\ttitle: '身份名称',\r\n\tdataIndex: 'identity',\r\n\tkey: 'identity'\r\n}];\r\nexport const apiAuthorityColumns = [{\r\n\t\ttitle: 'api权限名称',\r\n\t\tdataIndex: 'api_authority_text',\r\n\t\tkey: 'api_authority_text'\r\n\t},\r\n\t{\r\n\t\ttitle: 'api权限url',\r\n\t\tdataIndex: 'api_authority_url',\r\n\t\tkey: 'api_authority_url'\r\n\t},\r\n\t{\r\n\t\ttitle: 'api权限方法',\r\n\t\tdataIndex: 'api_authority_method',\r\n\t\tkey: 'api_authority_method'\r\n\t}\r\n];\r\nexport const identityApiColumns = [{\r\n\t\ttitle: '身份名称',\r\n\t\tdataIndex: 'identity',\r\n\t\tkey: 'identity'\r\n\t},\r\n\t{\r\n\t\ttitle: 'api权限名称',\r\n\t\tdataIndex: 'api_authority_text',\r\n\t\tkey: 'api_authority_text'\r\n\t},\r\n\t{\r\n\t\ttitle: 'api权限url',\r\n\t\tdataIndex: 'api_authority_url',\r\n\t\tkey: 'api_authority_url'\r\n\t},\r\n\t{\r\n\t\ttitle: 'api权限方法',\r\n\t\tdataIndex: 'api_authority_method',\r\n\t\tkey: 'api_authority_method'\r\n\t}\r\n];\r\nexport const viewAuthorityColumns = [{\r\n\t\ttitle: '视图权限名称',\r\n\t\tdataIndex: 'view_authority_text',\r\n\t\tkey: 'view_authority_text'\r\n\t},\r\n\t{\r\n\t\ttitle: '视图id',\r\n\t\tdataIndex: 'view_id',\r\n\t\tkey: 'view_id'\r\n\t}\r\n];\r\nexport const identityViewColumns = [{\r\n\t\ttitle: '身份',\r\n\t\tdataIndex: 'identity',\r\n\t\tkey: 'identity'\r\n\t},\r\n\t{\r\n\t\ttitle: '视图权限名称',\r\n\t\tdataIndex: 'view_authority_text',\r\n\t\tkey: 'view_authority_text'\r\n\t},\r\n\t{\r\n\t\ttitle: '视图id',\r\n\t\tdataIndex: 'view_id',\r\n\t\tkey: 'view_id'\r\n\t}\r\n];","/*\r\n * 用户展示\r\n * @Author: yixian\r\n * @Date: 2019-09-03 11:52:32\r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-09 00:01:37\r\n */\r\n\r\nimport { Radio } from 'antd';\r\nimport '@/assets/css/user/showUser.css';\r\nimport React, { Component } from 'react';\r\nimport ShowUserList from '@/components/user/showUserList';\r\nimport {\r\n\tuserIdentity,\r\n\tidentityId,\r\n\tapiAuthority,\r\n\tidentityApiAuthority,\r\n\tviewAuthority,\r\n\tidentityViewAuthority\r\n} from '@/api/user';\r\nimport {\r\n\tuserData,\r\n\tidentityColumns,\r\n\tapiAuthorityColumns,\r\n\tidentityApiColumns,\r\n\tviewAuthorityColumns,\r\n\tidentityViewColumns\r\n} from '@/config/showUser';\r\n\r\nclass ShowUser extends Component {\r\n\tstate = {\r\n\t\tsize: '用户数据',\r\n\t\tuserList: [],\r\n\t\tidentityList: [],\r\n\t\tapiAuthorityList: [],\r\n\t\tidentityApiList: [],\r\n\t\tviewAuthorityList: [],\r\n\t\tidentityViewList: []\r\n\t};\r\n\thandleSizeChange = e => {\r\n\t\tthis.setState({ size: e.target.value });\r\n\t};\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tsize,\r\n\t\t\tuserList,\r\n\t\t\tidentityList,\r\n\t\t\tapiAuthorityList,\r\n\t\t\tidentityApiList,\r\n\t\t\tviewAuthorityList,\r\n\t\t\tidentityViewList\r\n\t\t} = this.state;\r\n\t\treturn (\r\n\t\t\t<div className='showUser'>\r\n\t\t\t\t<Radio.Group value={size} onChange={this.handleSizeChange}>\r\n\t\t\t\t\t<Radio.Button value='用户数据'>用户数据</Radio.Button>\r\n\t\t\t\t\t<Radio.Button value='身份数据'>身份数据</Radio.Button>\r\n\t\t\t\t\t<Radio.Button value='api接口权限'>api接口权限</Radio.Button>\r\n\t\t\t\t\t<Radio.Button value='身份和api接口关系'>\r\n\t\t\t\t\t\t身份和api接口关系\r\n\t\t\t\t\t</Radio.Button>\r\n\t\t\t\t\t<Radio.Button value='视图接口权限'>\r\n\t\t\t\t\t\t视图接口权限\r\n\t\t\t\t\t</Radio.Button>\r\n\t\t\t\t\t<Radio.Button value='身份和视图权限关系'>\r\n\t\t\t\t\t\t身份和视图权限关系\r\n\t\t\t\t\t</Radio.Button>\r\n\t\t\t\t</Radio.Group>\r\n\t\t\t\t<h2 className='showUserTitles'>{size}</h2>\r\n\t\t\t\t<div className='showUserList'>\r\n\t\t\t\t\t{size === '用户数据' ? (\r\n\t\t\t\t\t\t<ShowUserList columns={userData} data={userList} />\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t{size === '身份数据' ? (\r\n\t\t\t\t\t\t<ShowUserList\r\n\t\t\t\t\t\t\tcolumns={identityColumns}\r\n\t\t\t\t\t\t\tdata={identityList}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t{size === 'api接口权限' ? (\r\n\t\t\t\t\t\t<ShowUserList\r\n\t\t\t\t\t\t\tcolumns={apiAuthorityColumns}\r\n\t\t\t\t\t\t\tdata={apiAuthorityList}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t{size === '身份和api接口关系' ? (\r\n\t\t\t\t\t\t<ShowUserList\r\n\t\t\t\t\t\t\tcolumns={identityApiColumns}\r\n\t\t\t\t\t\t\tdata={identityApiList}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t{size === '视图接口权限' ? (\r\n\t\t\t\t\t\t<ShowUserList\r\n\t\t\t\t\t\t\tcolumns={viewAuthorityColumns}\r\n\t\t\t\t\t\t\tdata={viewAuthorityList}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t{size === '身份和视图权限关系' ? (\r\n\t\t\t\t\t\t<ShowUserList\r\n\t\t\t\t\t\t\tcolumns={identityViewColumns}\r\n\t\t\t\t\t\t\tdata={identityViewList}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tuserIdentity().then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tuserList: res.data.map(el => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...el,\r\n\t\t\t\t\t\tkey: el.username\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t});\r\n\t\tidentityId().then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tidentityList: res.data.map(item => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tkey: item.identity_id\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t});\r\n\t\tapiAuthority().then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tapiAuthorityList: res.data.map(item => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tkey: item.api_authority_id\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t});\r\n\t\tidentityApiAuthority().then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tidentityApiList: res.data.map(item => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tkey: item.api_authority_text\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t});\r\n\t\tviewAuthority().then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tviewAuthorityList: res.data.map(item => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tkey: item.view_authority_id\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t});\r\n\t\tidentityViewAuthority().then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tidentityViewList: res.data.map(item => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tkey: item.view_authority_text\r\n\t\t\t\t\t};\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\nexport default ShowUser;\r\n","/*\r\n * @Author: jiaze \r\n * @Date: 2019-09-05 15:11:51 \r\n * @Last Modified by: zgh\r\n * @Last Modified time: 2019-09-09 09:44:47\r\n */\r\n\r\nimport { connect } from \"dva\";\r\nimport React, { Component } from 'react';\r\nimport { Upload, Icon, message, Button } from 'antd';\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n        message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n        message.error('Image must smaller than 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n}\r\nconst mapState = state => {\r\n    return state.upHeadImg\r\n}\r\n\r\n@connect(mapState)\r\nclass AddHeadImg extends Component {\r\n    state = {\r\n        loading: false,\r\n    };\r\n    handleChange = info => {\r\n        if (info.file.status === 'uploading') {\r\n            this.setState({ loading: true });\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n            // Get this url from response in real world.\r\n            getBase64(info.file.originFileObj, imageUrl =>\r\n                this.setState({\r\n                    imageUrl,\r\n                    loading: false,\r\n                }),\r\n            );\r\n        }\r\n    };\r\n    upImg() {\r\n        this.props.dispatch({\r\n            type: \"login/upHeadImg\",\r\n            payload: this.state.imageUrl\r\n        }).then(() => {\r\n            message.success(\"设置成功\")\r\n        })\r\n    }\r\n    render() {\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\r\n             \r\n            </div>\r\n        );\r\n        const { imageUrl } = this.state;\r\n        return (\r\n            <div>\r\n                <h2>上传头像</h2>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                    beforeUpload={beforeUpload}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n                <Button className=\"updateBtn\" onClick={this.upImg.bind(this)}>确认</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddHeadImg;\r\n","/*\r\n * @Author: zgh \r\n * @Date: 2019-09-06 20:35:33 \r\n * @Last Modified by: zhujiahui\r\n * @Last Modified time: 2019-09-09 12:00:20\r\n * 试题管理的接口\r\n */\r\n\r\nimport request from \"@/util/request\";\r\n\r\nlet api = {\r\n    exam_type: () => request.get('/exam/examtype'),\r\n    subject_type: () => request.get('/subject/type'),\r\n    topic_type: () => request.get('/topic/type'),\r\n    addquestion: (obj) => request.post('/question/addquestion', obj),\r\n    addquestiontype: (obj) => request.post('/question/addquestiontype', obj),\r\n    getquestion: () => request.get('/question/questionList'),\r\n    findquestion: (obj) => request.post('/question/findquestion', obj),\r\n    newquestion: (obj) => request.post('/question/detail', obj),\r\n\r\n\r\n}\r\nexport default api","/*\r\n * @Author: zgh\r\n * @Date: 2019-09-03 10:00:01\r\n * @Last Modified by: zhujiahui\r\n * @Last Modified time: 2019-09-09 20:16:57\r\n */\r\n\r\nimport Editor from 'for-editor';\r\nimport question from '@/api/question'\r\nimport React, { Component } from 'react';\r\nimport { Layout, message, Breadcrumb, Input, Select, Button } from 'antd';\r\n\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\n\r\nclass AddQuestions extends Component {\r\n    state = {\r\n        collapsed: false,\r\n        iptval: '',\r\n        topic: '',\r\n        answer: '',\r\n        examtype: [],\r\n        subjecttype: [],\r\n        topictype: [],\r\n        select_exam: '',\r\n        select_subject: '',\r\n        select_topic: '',\r\n        username: ''\r\n    };\r\n    onCollapse = collapsed => {\r\n        this.setState({ collapsed });\r\n    };\r\n    render() {\r\n        let {\r\n            iptval,\r\n            topic,\r\n            answer,\r\n            examtype,\r\n            subjecttype,\r\n            topictype\r\n        } = this.state;\r\n        return <div>\r\n            <Layout\r\n                style={{\r\n                    padding: '0 24px 24px',\r\n                    height: 'auto',\r\n                    width: '1000px'\r\n                }}>\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item>添加试题</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <Content\r\n                    style={{\r\n                        background: '#fff',\r\n                        padding: 24,\r\n                        margin: 0,\r\n                        minHeight: 300\r\n                    }}>\r\n                    <div>题目信息</div>\r\n                    <div style={{ margin: '20px 0' }}>题干</div>\r\n                    <Input\r\n                        placeholder='请输入题目信息，不超过20个字'\r\n                        value={iptval}\r\n                        onChange={e => {\r\n                            this.setState({\r\n                                iptval: e.target.value\r\n                            });\r\n                        }}\r\n                    />\r\n                    <div style={{ margin: '20px 0' }}> 题目主题</div>\r\n                    <Editor\r\n                        style={{ height: '300px' }}\r\n                        value={topic}\r\n                        onChange={e => {\r\n                            this.setState({\r\n                                topic: e\r\n                            });\r\n                        }}\r\n                    />\r\n                    <div style={{ margin: '20px 0' }}>请选择考试类型:</div>\r\n                    <Select\r\n                        defaultValue='请选择'\r\n                        style={{ width: 120 }}\r\n                        onChange={e => {\r\n                            this.setState({\r\n                                select_exam: e\r\n                            });\r\n                        }}>\r\n                        {examtype && examtype.map((item, index) => (\r\n                            <Option value={item.text} key={index}>\r\n                                {item.text}\r\n                            </Option>\r\n                        ))}\r\n                    </Select>\r\n                    <div style={{ margin: '20px 0' }}>请选择课程类型：</div>\r\n                    <Select\r\n                        defaultValue='请选择：'\r\n                        style={{ width: 120 }}\r\n                        onChange={e => {\r\n                            this.setState({\r\n                                select_subject: e\r\n                            });\r\n                        }}>\r\n                        {subjecttype &&\r\n                            subjecttype.map((item, index) => (\r\n                                <Option value={item.subject_name} key={index}>\r\n                                    {item.subject_name}\r\n                                </Option>\r\n                            ))}\r\n                    </Select>\r\n                    <div style={{ margin: '20px 0' }}>请选择题目类型:</div>\r\n                    <Select\r\n                        defaultValue='请选择'\r\n                        style={{ width: 120 }}\r\n                        onChange={e => {\r\n                            this.setState({\r\n                                select_topic: e\r\n                            });\r\n                        }}>\r\n                        {topictype &&\r\n                            topictype.map((item, index) => (\r\n                                <Option value={item.typename} key={item.id}>\r\n                                    {item.typename}\r\n                                </Option>\r\n                            ))}\r\n                    </Select>\r\n                    <div style={{ margin: '20px 0' }}>答案信息</div>\r\n                    <Editor\r\n                        style={{ height: '300px' }}\r\n                        value={answer}\r\n                        onChange={e => {\r\n                            this.setState({\r\n                                answer: e\r\n                            });\r\n                        }}\r\n                    />\r\n                    <Button type='primary' onClick={this.submit}>\r\n                        提交\r\n                        </Button>\r\n                </Content>\r\n            </Layout>\r\n        </div>\r\n    }\r\n    /**\r\n    * 添加试题\r\n    */\r\n    submit = () => {\r\n        let { iptval, topic, answer, select_exam, select_subject, select_topic, username } = this.state;\r\n        username = window.sessionStorage.getItem('name')\r\n        console.log(username)\r\n        question.addquestion({ iptval, topic, answer, select_exam, select_subject, select_topic, username }).then(res => {\r\n            let { code, msg } = res.data;\r\n            if (code) {\r\n                message.success(msg)\r\n            }\r\n            else {\r\n                message.error(msg);\r\n            }\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        /**\r\n         * 考试类型\r\n         */\r\n        question.exam_type().then(res => {\r\n            this.setState({\r\n                examtype: res.data.result\r\n            })\r\n        })\r\n        /**\r\n         * 课程类型\r\n         */\r\n        question.subject_type().then(res => {\r\n            this.setState({\r\n                subjecttype: res.data.result\r\n            })\r\n        })\r\n        /**\r\n         * 题目类型\r\n         */\r\n        question.topic_type().then(res => {\r\n            this.setState({\r\n                topictype: res.data.result\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport default AddQuestions;\r\n","/*\r\n * @Author: zgh\r\n * @Date: 2019-09-03 21:14:08\r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-10 09:24:47\r\n */\r\n\r\nimport question from '@/api/question';\r\nimport React, { Component } from 'react';\r\nimport {\r\n    Layout,\r\n    message,\r\n    Table,\r\n    Modal,\r\n    Icon,\r\n    Breadcrumb,\r\n    Input,\r\n    Button\r\n} from 'antd';\r\n\r\nconst { Content } = Layout;\r\nconst columns = [\r\n    {\r\n        title: '类型ID',\r\n        dataIndex: 'name',\r\n        key: 'name'\r\n    },\r\n    {\r\n        title: '类型名称',\r\n        dataIndex: 'age',\r\n        key: 'age'\r\n    }\r\n];\r\n\r\nclass QuestionsType extends Component {\r\n    state = {\r\n        collapsed: false,\r\n        topictype: [],\r\n        ModalText: '确定',\r\n        visible: false,\r\n        confirmLoading: false,\r\n        data: []\r\n    };\r\n    onCollapse = collapsed => {\r\n        this.setState({ collapsed });\r\n    };\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true\r\n        });\r\n    };\r\n    Changevalue = e => {\r\n        this.setState({\r\n            val: e.target.value\r\n        });\r\n    };\r\n    /**\r\n     *添加题目类型\r\n     *\r\n     * @memberof val\r\n     */\r\n    handleOk = () => {\r\n        this.setState({\r\n            ModalText: '确定',\r\n            confirmLoading: true\r\n        });\r\n        let { val, data } = this.state;\r\n        question.addquestiontype({ val }).then(res => {\r\n            let { code, msg } = res.data;\r\n            if (code) {\r\n                message.success(msg);\r\n                data.push({\r\n                    key: data.length + 1,\r\n                    name: data.length + 1,\r\n                    age: val,\r\n                });\r\n                this.setState({\r\n                    data\r\n                });\r\n            } else {\r\n                message.error(msg);\r\n            }\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                visible: false,\r\n                confirmLoading: false\r\n            });\r\n        }, 2000);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            visible: false\r\n        });\r\n    };\r\n    render() {\r\n        const { visible, confirmLoading, data, val } = this.state;\r\n        return (\r\n            <Layout\r\n                style={{\r\n                    padding: '0 24px 24px',\r\n                    height: 'auto',\r\n                    width: '1000px'\r\n                }}>\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item>\r\n                        <h3>添加试题</h3>\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <Content\r\n                    style={{\r\n                        background: '#fff',\r\n                        padding: 24,\r\n                        margin: 0,\r\n                        minHeight: 300\r\n                    }}>\r\n                    <div>\r\n                        <Button type='primary' onClick={this.showModal}>\r\n                            <Icon type='plus' /> 添加类型\r\n                        </Button>\r\n                        <Modal\r\n                            title='创建新类型'\r\n                            visible={visible}\r\n                            onOk={this.handleOk}\r\n                            confirmLoading={confirmLoading}\r\n                            onCancel={this.handleCancel}>\r\n                            <Input\r\n                                placeholder='请输入类型名称'\r\n                                value={val}\r\n                                onChange={this.Changevalue}\r\n                            />\r\n                        </Modal>\r\n                    </div>\r\n                    <Table columns={columns} dataSource={data} />\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        /**\r\n         * 获取题目类型数据\r\n         */\r\n        let { data } = this.state;\r\n        question.topic_type().then(res => {\r\n            res.data.result.map((item, index) => {\r\n                data.push({\r\n                    key: item.id,\r\n                    name: item.id,\r\n                    age: item.typename,\r\n                    address: ''\r\n                });\r\n                return data;\r\n            });\r\n            this.setState({\r\n                data\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport default QuestionsType;\r\n","/*\r\n * @Author: zgh \r\n * @Date: 2019-09-06 21:30:03 \r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-15 22:57:06\r\n */\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n    Layout,\r\n    Tooltip,\r\n    Tag,\r\n    Icon,\r\n    Breadcrumb,\r\n    Button,\r\n    Select,\r\n    List,\r\n    message,\r\n} from 'antd';\r\nimport question from '@/api/question';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\nconst { Content } = Layout;\r\nconst { Option } = Select;\r\n\r\nclass Question extends Component {\r\n    state = {\r\n        topictype: [],\r\n        subjectType: [],\r\n        examtype: [],\r\n        topicType: [],\r\n        select_exam: '',\r\n        select_topic: '',\r\n        size: 'large',\r\n        data: [],\r\n        hasMore: true,\r\n        id: 0\r\n    };\r\n    render() {\r\n        const {\r\n            subjectType,\r\n            topicType,\r\n            examtype,\r\n        } = this.state;\r\n        return (\r\n            <Layout\r\n                style={{\r\n                    padding: '0 24px 24px',\r\n                    height: 'auto',\r\n                    width: '1000px'\r\n                }}\r\n            >\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item>\r\n                        <h3>查看试题</h3>\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <Content\r\n                    style={{\r\n                        background: '#fff',\r\n                        padding: 24,\r\n                        margin: 0,\r\n                        minHeight: 300\r\n                    }}>\r\n                    <div>\r\n                        <Tooltip title='prompt text' >\r\n                            <span> 课程类型：</span>\r\n                        </Tooltip>\r\n\r\n                        {subjectType &&\r\n                            subjectType.map(item => (\r\n                                <Button\r\n                                    style={{\r\n                                        marginLeft: '10px',\r\n                                        fontSize: '12px',\r\n                                        marginTop: '5px'\r\n                                    }}\r\n                                    key={item.id}\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            id: item.id,\r\n                                        })\r\n                                    }}>\r\n                                    {item.subject_name}\r\n                                </Button>\r\n                            ))}\r\n\r\n\r\n                        <div style={{ margin: '20px 0' }}>\r\n                            <span style={{ marginRight: '20px' }}>\r\n                                <Tooltip title='prompt text'>\r\n                                    <span> 考试类型:</span>\r\n                                </Tooltip>\r\n                                <Select\r\n                                    defaultValue='请选择'\r\n                                    style={{ width: 120 }}\r\n                                    onChange={value => {\r\n                                        this.setState({\r\n                                            select_exam: value\r\n                                        });\r\n\r\n                                    }}>\r\n                                    {examtype && examtype.map((item, index) => (\r\n                                        <Option\r\n                                            value={item.text}\r\n                                            key={index}>\r\n                                            {item.text}\r\n                                        </Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </span>\r\n                            <span >\r\n                                <Tooltip title='prompt text'>\r\n                                    <span> 题目类型: </span>\r\n                                </Tooltip>\r\n                                <Select\r\n                                    defaultValue='请选择'\r\n                                    style={{ width: 120 }}\r\n                                    onChange={value => {\r\n                                        this.setState({\r\n\r\n                                            select_topic: value\r\n                                        });\r\n                                    }}>\r\n                                    {topicType &&\r\n                                        topicType.map((item, index) => (\r\n                                            <Option\r\n                                                value={item.typename}\r\n                                                key={index}>\r\n                                                {item.typename}\r\n                                            </Option>\r\n                                        ))}\r\n                                </Select>\r\n                            </span>\r\n                            <span style={{ marginLeft: '20px' }}>\r\n                                <Button type=\"primary\" icon=\"search\" onClick={this.getlist}>\r\n                                    查询\r\n                                </Button>\r\n                            </span>\r\n                        </div>\r\n                        <ul>\r\n                            {\r\n                                this.state.data && this.state.data.map((item, index) => \r\n                                <li style={{ display: 'flex', borderBottom: '1px solid #eee' }} key={index}>\r\n                                    <div style={{ flex: 9 }}>\r\n                                        <div style={{ padding: '5px' }}>{item.question_name}</div>\r\n                                        <div style={{ padding: '5px' }}>\r\n                                            <Tag color=\"volcano\">{item.question_type}</Tag>\r\n                                            <Tag color=\"orange\">{item.question_class_type}</Tag>\r\n                                            <Tag color=\"gold\">{item.question_exam_type}</Tag>\r\n                                        </div>\r\n                                        <div style={{ padding: '5px', color: '#108ee9' }}>dingshaoshan 发布</div>\r\n                                    </div>\r\n                                    <div style={{ flex: 1 }}>\r\n                                        <Button type=\"link\" size={this.state.size} onClick={this.detailquestion}>\r\n                                            编辑\r\n\r\n                                        </Button>\r\n                                    </div>\r\n                                </li>)\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </Content>\r\n            </Layout >\r\n        );\r\n    }\r\n    handleInfiniteOnLoad = () => {\r\n        let { data } = this.state;\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        if (data.length > 14) {\r\n            message.warning('Infinite List loaded all');\r\n            this.setState({\r\n                hasMore: false,\r\n                loading: false,\r\n            });\r\n            return;\r\n        }\r\n        this.fetchData(res => {\r\n            data = data.concat(res.results);\r\n            this.setState({\r\n                data,\r\n                loading: false,\r\n            });\r\n        });\r\n    };\r\n\r\n    detailquestion = () => {\r\n        let { data } = this.state;\r\n        this.props.history.push({\r\n            pathname: '/main/detai',\r\n            query: data\r\n        });\r\n    }\r\n    getlist = () => {\r\n\r\n        let { select_exam, select_topic, id } = this.state;\r\n        question.findquestion({ select_exam, select_topic, id }).then(res => {\r\n            let { code, msg, result } = res.data;\r\n            if (code) {\r\n                message.success(msg)\r\n                this.setState({\r\n                    data: result\r\n                })\r\n            }\r\n            else {\r\n                message.error(msg);\r\n            }\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        /**\r\n         * 获取试题数据\r\n         */\r\n        question.getquestion().then(res => {\r\n            this.setState({\r\n                data: res.data.result,\r\n            });\r\n        })\r\n        /**\r\n        * 获取考试类型数据\r\n        */\r\n        question.exam_type().then(res => {\r\n            this.setState({\r\n                examtype: res.data.result\r\n            })\r\n        })\r\n        /**\r\n         * 获取课程类型数据\r\n         */\r\n        question.subject_type().then(res => {\r\n            this.setState({\r\n                subjectType: res.data.result\r\n            });\r\n        });\r\n        /**\r\n         * 获取题目类型数据\r\n         */\r\n        question.topic_type().then(res => {\r\n            this.setState({\r\n                topicType: res.data.result\r\n            });\r\n        });\r\n    }\r\n}\r\nexport default Question;\r\n","/*\r\n * @Author: zgh\r\n * @Date: 2019-09-03 10:00:01\r\n * @Last Modified by: zhujiahui\r\n * @Last Modified time: 2019-09-10 17:11:31\r\n */\r\n\r\nimport Editor from 'for-editor';\r\nimport question from '@/api/question'\r\nimport React, { Component } from 'react';\r\nimport { Layout, Form, message, Breadcrumb, Input, Select, Button } from 'antd';\r\n\r\nconst { Option } = Select;\r\nconst { Content } = Layout;\r\n\r\n@Form.create({ name: 'normal_login' })\r\nclass Detail extends Component {\r\n    state = {\r\n        collapsed: false,\r\n        iptval: '',\r\n        topic: '',\r\n        answer: '',\r\n        select_exam: '',\r\n        select_subject: '',\r\n        select_topic: '',\r\n        examtype: [],\r\n        subjecttype: [],\r\n        topictype: [],\r\n        id: 0\r\n    };\r\n    onCollapse = collapsed => {\r\n        this.setState({ collapsed });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                values.id = this.state.id;\r\n\r\n                question.newquestion(values).then(res => {\r\n                    let { code, msg } = res.data;\r\n                    if (code) {\r\n                        this.props.history.push('/main/watchQuestions')\r\n                    }\r\n                })\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        let {\r\n            iptval,\r\n            topic,\r\n            answer,\r\n            select_exam,\r\n            select_subject,\r\n            select_topic,\r\n            examtype,\r\n            subjecttype,\r\n            topictype,\r\n            id\r\n        } = this.state;\r\n\r\n        const { getFieldDecorator } = this.props.form;\r\n        return <div>\r\n            <Layout\r\n                style={{\r\n                    padding: '0 24px 24px',\r\n                    height: 'auto',\r\n                    width: '1000px'\r\n                }}>\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item>添加试题</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <Content\r\n                    style={{\r\n                        background: '#fff',\r\n                        padding: 24,\r\n                        margin: 0,\r\n                        minHeight: 300\r\n                    }}>\r\n                    <div>题目信息</div>\r\n                    <div style={{ margin: '20px 0' }}>题干</div>\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item>\r\n                            {getFieldDecorator('iptval', {\r\n                                initialValue: iptval\r\n                            })(\r\n                                <Input\r\n                                    placeholder='请输入题目信息，不超过20个字'\r\n                                />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"题目主题\">\r\n                            {getFieldDecorator('topic', {\r\n                                initialValue: this.state.topic\r\n                            })(\r\n                                <Editor\r\n                                    style={{ height: '300px' }}\r\n                                    onChange={e => {\r\n                                        this.setState({\r\n                                            topic: e\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"请选择考试类型\">\r\n                            {getFieldDecorator('select_exam', {\r\n                                initialValue: select_exam\r\n                            })(\r\n                                <Select\r\n                                    style={{ width: 120 }}\r\n                                    onChange={e => {\r\n                                        this.setState({\r\n                                            select_exam: e\r\n                                        });\r\n                                    }}>\r\n                                    {examtype && examtype.map((item, index) => (\r\n                                        <Option value={item.text} key={index}>\r\n                                            {item.text}\r\n                                        </Option>\r\n                                    ))}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"请选择课程类型：\">\r\n                            {getFieldDecorator('select_subject', {\r\n                                initialValue: this.state.select_subject\r\n                            })(\r\n                                <Select\r\n                                    style={{ width: 120 }}\r\n                                    onChange={e => {\r\n                                        this.setState({\r\n                                            select_subject: e\r\n                                        });\r\n                                    }}>\r\n                                    {subjecttype &&\r\n                                        subjecttype.map((item, index) => (\r\n                                            <Option value={item.subject_name} key={index}>\r\n                                                {item.subject_name}\r\n                                            </Option>\r\n                                        ))}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"请选择题目类型\">\r\n                            {getFieldDecorator('select_topic', {\r\n                                initialValue: select_topic\r\n                            })(\r\n                                <Select\r\n                                    style={{ width: 120 }}\r\n                                    onChange={e => {\r\n                                        this.setState({\r\n                                            select_topic: e\r\n                                        });\r\n                                    }}>\r\n                                    {topictype &&\r\n                                        topictype.map((item, index) => (\r\n                                            <Option value={item.typename} key={item.id}>\r\n                                                {item.typename}\r\n                                            </Option>\r\n                                        ))}\r\n                                </Select>\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"答案信息\">\r\n                            {getFieldDecorator('answer', {\r\n                                initialValue: answer\r\n                            })(\r\n                                <Editor\r\n                                    style={{ height: '300px' }}\r\n                                    onChange={e => {\r\n                                        this.setState({\r\n                                            answer: e\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                提交\r\n                         </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Content>\r\n            </Layout>\r\n        </div>\r\n    }\r\n    /**\r\n    * 修改试题\r\n    */\r\n\r\n    componentDidMount() {\r\n        /**\r\n       * 通过路由传递过来的参数\r\n       * */\r\n        let data = this.props.location.query.item;\r\n        console.log(data)\r\n        let { id, question_name, question_body, question_answer, question_class_type, question_exam_type, question_type } = data;\r\n        this.setState({\r\n            id: id,\r\n            iptval: question_name,\r\n            topic: question_body,\r\n            answer: question_answer,\r\n            select_exam: question_exam_type,\r\n            select_subject: question_class_type,\r\n            select_topic: question_type,\r\n        })\r\n\r\n        /**\r\n         * 考试类型\r\n         */\r\n        question.exam_type().then(res => {\r\n            this.setState({\r\n                examtype: res.data.result\r\n            })\r\n        })\r\n        /**\r\n         * 课程类型\r\n         */\r\n        question.subject_type().then(res => {\r\n            this.setState({\r\n                subjecttype: res.data.result\r\n            })\r\n        })\r\n        /**\r\n         * 题目类型\r\n         */\r\n        question.topic_type().then(res => {\r\n            this.setState({\r\n                topictype: res.data.result\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport default Detail;\r\n\r\n","/*\r\n * @Author: jiaze \r\n * @Date: 2019-09-03 15:08:21 \r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-15 22:50:03\r\n */\r\n\r\nimport Home from '@/containers/Home';\r\nimport Login from '@/containers/Login';\r\nimport Exam from '@/containers/Home/exam/Exam';\r\nimport Room from '@/containers/Home/grade/Room';\r\nimport Paper from '@/containers/Home/paper/Paper';\r\nimport Grade from '@/containers/Home/grade/Grade';\r\nimport AddExam from '@/containers/Home/exam/AddExam';\r\nimport AddUser from '@/containers/Home/user/addUser';\r\nimport Student from '@/containers/Home/grade/Student';\r\nimport ShowUser from '@/containers/Home/user/showUser';\r\nimport AddHeadImg from '@/containers/Home/user/AddHeadImg';\r\nimport AddQuestions from '@/containers/Home/test/AddQuestions';\r\nimport QuestionsType from '@/containers/Home/test/QuestionsType';\r\nimport WatchQuestions from '@/containers/Home/test/WatchQuestions';\r\nimport Detail from '@/containers/Home/test/detail';\r\nimport DetailTest from '../containers/Home/detail/DetailTest';\r\n\r\nconst route = [{\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n    {\r\n        path: '/main',\r\n        component: Home,\r\n        children: [{\r\n                path: '/main/addQuestions',\r\n                component: AddQuestions\r\n            },\r\n            {\r\n                path: '/main/detail/:id',\r\n                component: DetailTest\r\n            },\r\n            {\r\n                path: '/main/questionsType',\r\n                component: QuestionsType\r\n            },\r\n            {\r\n                path: '/main/watchQuestions',\r\n                component: WatchQuestions\r\n            },\r\n            {\r\n                path: '/main/detai',\r\n                component: Detail\r\n            },\r\n            {\r\n                path: '/main/addUser',\r\n                component: AddUser\r\n            },\r\n            {\r\n                path: '/main/showUser',\r\n                component: ShowUser\r\n            },\r\n            {\r\n                path: '/main/addExam',\r\n                component: AddExam\r\n            },\r\n            {\r\n                path: '/main/exam',\r\n                component: Exam\r\n            },\r\n            {\r\n                path: '/main/grade',\r\n                component: Grade\r\n            },\r\n            {\r\n                path: '/main/room',\r\n                component: Room\r\n            },\r\n            {\r\n                path: '/main/student',\r\n                component: Student\r\n            },\r\n            {\r\n                path: '/main/paper',\r\n                component: Paper\r\n            },\r\n            {\r\n                path: '/main/addHeadImg',\r\n                component: AddHeadImg\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        from: '/',\r\n        to: '/login'\r\n    }\r\n];\r\n\r\nexport default route;","/*\r\n * @Author: xiaoyu \r\n * @Date: 2019-09-15 19:19:59 \r\n * @Last Modified by: xiaoyu\r\n * @Last Modified time: 2019-09-15 19:29:48\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Tag } from 'antd';\r\n\r\nclass DetailTest extends Component {\r\n    state = {\r\n        size: 'large',\r\n    };\r\n    render() {\r\n        const { data } = this.props.location.state;\r\n        return (\r\n            <div style={{ height: '100%', width: '100%', display: 'flex', flexFlow: 'column nowrap' }}>\r\n                <h2>查看试题</h2>\r\n                <div style={{ background: '#fff', flex: 1, overflow: 'auto', borderRadius: '15px' }}>\r\n                    {\r\n                        data.map(item => (\r\n                            <div style={{ display: 'flex', borderBottom: '1px solid #eee' }} key={item.id}>\r\n                                <div style={{ flex: 9 }}>\r\n                                    <div style={{ paddingLeft: '25px', paddingBottom: '7px', paddingTop: '7px' }}>{item.question_name}</div>\r\n                                    <div style={{ paddingLeft: '25px', paddingBottom: '7px', paddingTop: '7px' }}>\r\n                                        <Tag color=\"volcano\">{item.question_type}</Tag>\r\n                                        <Tag color=\"orange\">{item.question_class_type}</Tag>\r\n                                        <Tag color=\"gold\">{item.question_exam_type}</Tag>\r\n                                    </div>\r\n                                    <div style={{ paddingLeft: '25px', paddingBottom: '7px', paddingTop: '7px', color: '#108ee9' }}>{item.user} 发布</div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DetailTest;","/*\r\n * @Author: jiaze \r\n * @Date: 2019-09-03 15:07:40 \r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-03 15:08:01\r\n */\r\n\r\nimport React from 'react';\r\nimport { Switch, Route, Redirect } from 'dva/router';\r\n\r\nconst MapRouter = ({ route }) => (\r\n    <Switch>\r\n        {route.map(item =>\r\n            item.path ? (\r\n                item.children ? (\r\n                    <Route\r\n                        key={item.path}\r\n                        path={item.path}\r\n                        render={props => (\r\n                            <item.component {...props} route={item.children}>\r\n                                <MapRouter route={item.children} />\r\n                            </item.component>\r\n                        )}\r\n                    />\r\n                ) : (\r\n                    <Route\r\n                        key={item.path}\r\n                        path={item.path}\r\n                        render={props => (\r\n                            <item.component {...props}></item.component>\r\n                        )}\r\n                    />\r\n                )\r\n            ) : (\r\n                <Redirect key={item.from} {...item} />\r\n            )\r\n        )}\r\n    </Switch>\r\n);\r\n\r\nexport default MapRouter;\r\n","/*\r\n * @Author: jiaze \r\n * @Date: 2019-09-03 15:24:36 \r\n * @Last Modified by:   jiaze \r\n * @Last Modified time: 2019-09-03 15:24:36 \r\n */\r\n\r\nimport React from 'react';\r\nimport {Router} from 'dva/router';\r\nimport '@/assets/css/app/App.css';\r\nimport {MapRouter,route} from './router';\r\n\r\nfunction App({history}) {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n       <MapRouter route={route} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/*\r\n * @Author: jiaze \r\n * @Date: 2019-09-03 11:53:07 \r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-07 11:56:16\r\n */\r\n\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    getSession\r\n} from '@/util';\r\n\r\nconst defaultParams = {\r\n    type: 1\r\n}\r\n\r\n/**\r\n *@name 用户登录接口\r\n * @param {payload} Object\r\n */\r\nexport function userLogin(payload) {\r\n    const url = '/user/login';\r\n    return axios.post(url, {\r\n        ...defaultParams,\r\n        ...payload\r\n    });\r\n}\r\n\r\n/**\r\n * @name 获取用户列表\r\n */\r\nexport async function getShow() {\r\n    const url = '/api/list';\r\n    const token = getSession('token');\r\n    const id = getSession('id');\r\n    const result = await axios.post(url, null, {\r\n        headers: {\r\n            token,\r\n            id\r\n        }\r\n    });\r\n    return result;\r\n}","/*\r\n * @Author: jiaze \r\n * @Date: 2019-09-03 15:09:58 \r\n * @Last Modified by:   jiaze \r\n * @Last Modified time: 2019-09-03 15:09:58 \r\n */\r\n\r\nexport const SAVE_TOKEN = 'SAVETOKEN';\r\n","/*\r\n * @Author: jiaze \r\n * @Date: 2019-09-03 15:10:06 \r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-15 22:50:20\r\n */\r\n\r\nimport {\r\n    userLogin\r\n} from '@/api/login';\r\nimport {\r\n    SAVE_TOKEN\r\n} from '@/store/type';\r\nimport Cookie from 'js-cookie';\r\n\r\nexport default {\r\n    namespace: 'login',\r\n    state: {\r\n        token: Cookie.get('token') || '',\r\n        name:sessionStorage.getItem('name')||''\r\n    },\r\n    effects: {\r\n        * login({\r\n            payload\r\n        }, {\r\n            call,\r\n            put\r\n        }) {\r\n            const result = yield call(userLogin, payload);\r\n            Cookie.set('token', result.data.token, {\r\n                expires: 7\r\n            });\r\n            Cookie.set('id', result.data.id, {\r\n                expires: 7\r\n            });\r\n            Cookie.set('identity_id', result.data.identity_id, {\r\n                expires: 7\r\n            });\r\n            Cookie.set('username', result.data.username, {\r\n                expires: 7\r\n            });\r\n            yield put({\r\n                type: SAVE_TOKEN,\r\n                payload: {\r\n                    token: result.data.token,\r\n                    value: result,\r\n                    name:payload.username\r\n                     \r\n                }\r\n            });\r\n        },\r\n        * upHeadImg({\r\n            payload\r\n        }, {\r\n            call,\r\n            put\r\n        }) {\r\n            localStorage.setItem(\"HeadImg\", payload)\r\n            yield put({\r\n                type: 'SAVE_HEADIMG',\r\n                value: payload\r\n            });\r\n        }\r\n    },\r\n    reducers: {\r\n        [SAVE_TOKEN](state, {\r\n            payload\r\n        }) \r\n    \r\n        {\r\n            console.log(payload)\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                name:payload.name\r\n                \r\n            };\r\n        },\r\n        SAVE_HEADIMG(state, {\r\n            value\r\n        }) {\r\n            return {\r\n                ...state,\r\n                headImg: value\r\n            }\r\n        }\r\n    }\r\n};","/*\r\n * @Author: jiaze \r\n * @Date: 2019-09-03 15:24:57 \r\n * @Last Modified by: jiaze\r\n * @Last Modified time: 2019-09-11 15:22:20\r\n */\r\n\r\nimport dva from 'dva';\r\nimport App from './App';\r\nimport login from './store/login';\r\nimport { createBrowserHistory as createHistory } from 'history';\r\nconst app = dva({\r\n    history: createHistory()\r\n  });\r\n\r\napp.model(login)\r\napp.router(App);\r\napp.start('#root');"],"sourceRoot":""}